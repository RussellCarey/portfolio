{"ast":null,"code":"import _slicedToArray from\"/Users/r/Desktop/portfolio-final/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{VideoContainer,IFrameContainer}from\"./styles/styled\";import{jsx as _jsx}from\"react/jsx-runtime\";var YoutubeEmbed=function YoutubeEmbed(_ref){var id=_ref.id,themeState=_ref.themeState,dimensions=_ref.dimensions;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),hovered=_useState2[0],setHovered=_useState2[1];return/*#__PURE__*/_jsx(VideoContainer,{themeState:themeState,hovered:hovered,dimensions:dimensions,children:/*#__PURE__*/_jsx(IFrameContainer,{src:\"https://www.youtube.com/embed/\".concat(id),frameBorder:\"0\",allow:\"clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowFullScreen:true,title:\"Embedded youtube\",onMouseOver:function onMouseOver(){return setHovered(true);},onMouseOut:function onMouseOut(){return setHovered(false);}})});};export default YoutubeEmbed;","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/InnerPages/Project/Youtube.tsx"],"names":["useState","VideoContainer","IFrameContainer","YoutubeEmbed","id","themeState","dimensions","hovered","setHovered"],"mappings":"6HAAA,OAA4BA,QAA5B,KAA4C,OAA5C,CAGA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,iBAAhD,C,2CAEA,GAAMC,CAAAA,YAA8C,CAAG,QAAjDA,CAAAA,YAAiD,MAAoC,IAAjCC,CAAAA,EAAiC,MAAjCA,EAAiC,CAA7BC,UAA6B,MAA7BA,UAA6B,CAAjBC,UAAiB,MAAjBA,UAAiB,CACzF,cAA8BN,QAAQ,CAAU,KAAV,CAAtC,wCAAOO,OAAP,eAAgBC,UAAhB,eAEA,mBACE,KAAC,cAAD,EAAgB,UAAU,CAAEH,UAA5B,CAAwC,OAAO,CAAEE,OAAjD,CAA0D,UAAU,CAAED,UAAtE,uBACE,KAAC,eAAD,EACE,GAAG,yCAAmCF,EAAnC,CADL,CAEE,WAAW,CAAC,GAFd,CAGE,KAAK,CAAC,iEAHR,CAIE,eAAe,KAJjB,CAKE,KAAK,CAAC,kBALR,CAME,WAAW,CAAE,6BAAMI,CAAAA,UAAU,CAAC,IAAD,CAAhB,EANf,CAOE,UAAU,CAAE,4BAAMA,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAPd,EADF,EADF,CAaD,CAhBD,CAkBA,cAAeL,CAAAA,YAAf","sourcesContent":["import { FunctionComponent, useState } from \"react\";\n\nimport { IYoutubeEmbed } from \"./types/types\";\nimport { VideoContainer, IFrameContainer } from \"./styles/styled\";\n\nconst YoutubeEmbed: FunctionComponent<IYoutubeEmbed> = ({ id, themeState, dimensions }) => {\n  const [hovered, setHovered] = useState<boolean>(false);\n\n  return (\n    <VideoContainer themeState={themeState} hovered={hovered} dimensions={dimensions}>\n      <IFrameContainer\n        src={`https://www.youtube.com/embed/${id}`}\n        frameBorder=\"0\"\n        allow=\"clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        title=\"Embedded youtube\"\n        onMouseOver={() => setHovered(true)}\n        onMouseOut={() => setHovered(false)}\n      />\n    </VideoContainer>\n  );\n};\n\nexport default YoutubeEmbed;\n"]},"metadata":{},"sourceType":"module"}