{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/src/components/BottomBar/StartMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { StartMenuButton, StartMenuContainer } from \"./styles/styled\";\nimport ThemeContext from \"../../context/theme/themeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartMenu = _ref => {\n  _s();\n\n  let {\n    themeState\n  } = _ref;\n  const {\n    themeChangeMap\n  } = useContext(ThemeContext);\n  const [isDark, setIsDark] = useState(false);\n\n  const selectAndChangeRandomColor = () => {\n    // console.log(\"CLicked change theme button\");\n    // const themeArray = Object.entries(themeChangeMap);\n    // const randomNumber = Math.floor(Math.random() * themeArray.length);\n    // themeArray[randomNumber][1]();\n    //! Dark theme is not great nor the back groind colors.\n    themeChangeMap.pink();\n  };\n\n  const toggleDarkMode = () => {\n    isDark ? themeChangeMap.dark() : themeChangeMap.light();\n    setIsDark(!isDark);\n  };\n\n  return /*#__PURE__*/_jsxDEV(StartMenuContainer, {\n    themeState: themeState,\n    children: [/*#__PURE__*/_jsxDEV(StartMenuButton, {\n      onClick: selectAndChangeRandomColor,\n      themeState: themeState,\n      children: \"change color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartMenuButton, {\n      onClick: toggleDarkMode,\n      themeState: themeState,\n      children: \"toggle dark mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartMenuButton, {\n      themeState: themeState,\n      children: \"allow right click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartMenu, \"Jq1t6TDOFSpscMPE+DnV/ynbalE=\");\n\n_c = StartMenu;\nexport default StartMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartMenu\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/components/BottomBar/StartMenu.tsx"],"names":["useContext","useState","StartMenuButton","StartMenuContainer","ThemeContext","StartMenu","themeState","themeChangeMap","isDark","setIsDark","selectAndChangeRandomColor","pink","toggleDarkMode","dark","light"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,iBAApD;AAGA,OAAOC,YAAP,MAAyB,kCAAzB;;;AAEA,MAAMC,SAA6C,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACxE,QAAM;AAAEC,IAAAA;AAAF,MAAqBP,UAAU,CAACI,YAAD,CAArC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAU,KAAV,CAApC;;AAEA,QAAMS,0BAA0B,GAAG,MAAM;AACvC;AACA;AACA;AAEA;AAEA;AACAH,IAAAA,cAAc,CAACI,IAAf;AACD,GATD;;AAWA,QAAMC,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,MAAM,GAAGD,cAAc,CAACM,IAAf,EAAH,GAA2BN,cAAc,CAACO,KAAf,EAAjC;AACAL,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAHD;;AAKA,sBACE,QAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEF,UAAhC;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEI,0BAA1B;AAAsD,MAAA,UAAU,EAAEJ,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEM,cAA1B;AAA0C,MAAA,UAAU,EAAEN,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,eAAD;AAAiB,MAAA,UAAU,EAAEA,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/BD;;GAAMD,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import { FunctionComponent, useContext, useState } from \"react\";\nimport { StartMenuButton, StartMenuContainer } from \"./styles/styled\";\nimport { IStartMenuProps } from \"./types/interfaces\";\n\nimport ThemeContext from \"../../context/theme/themeContext\";\n\nconst StartMenu: FunctionComponent<IStartMenuProps> = ({ themeState }) => {\n  const { themeChangeMap } = useContext(ThemeContext);\n  const [isDark, setIsDark] = useState<boolean>(false);\n\n  const selectAndChangeRandomColor = () => {\n    // console.log(\"CLicked change theme button\");\n    // const themeArray = Object.entries(themeChangeMap);\n    // const randomNumber = Math.floor(Math.random() * themeArray.length);\n\n    // themeArray[randomNumber][1]();\n\n    //! Dark theme is not great nor the back groind colors.\n    themeChangeMap.pink();\n  };\n\n  const toggleDarkMode = () => {\n    isDark ? themeChangeMap.dark() : themeChangeMap.light();\n    setIsDark(!isDark);\n  };\n\n  return (\n    <StartMenuContainer themeState={themeState}>\n      <StartMenuButton onClick={selectAndChangeRandomColor} themeState={themeState}>\n        change color\n      </StartMenuButton>\n      <StartMenuButton onClick={toggleDarkMode} themeState={themeState}>\n        toggle dark mode\n      </StartMenuButton>\n      <StartMenuButton themeState={themeState}>allow right click</StartMenuButton>\n    </StartMenuContainer>\n  );\n};\n\nexport default StartMenu;\n"]},"metadata":{},"sourceType":"module"}