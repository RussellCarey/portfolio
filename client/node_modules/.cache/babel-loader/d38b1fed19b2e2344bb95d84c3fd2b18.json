{"ast":null,"code":"import _slicedToArray from\"/Users/r/Desktop/portfolio-final/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useState}from\"react\";import{StartMenuButton,StartMenuContainer}from\"./styles/styled\";import ThemeContext from\"../../context/theme/themeContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StartMenu=function StartMenu(_ref){var themeState=_ref.themeState,canRightClick=_ref.canRightClick,setCanRightClick=_ref.setCanRightClick;var _useContext=useContext(ThemeContext),themeChangeMap=_useContext.themeChangeMap;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDark=_useState2[0],setIsDark=_useState2[1];var selectAndChangeRandomColor=function selectAndChangeRandomColor(){//! Dark theme is not great nor the back groind colors.\nthemeChangeMap.pink();};var toggleDarkMode=function toggleDarkMode(){isDark?themeChangeMap.dark():themeChangeMap.light();setIsDark(!isDark);};var rightClickToggle=function rightClickToggle(){// if (canRightClick) {\n//   console.log(\"Displable right click\");\n//   document.removeEventListener(\"contextmenu\", (e) => e.preventDefault());\n// }\n// if (!canRightClick) {\n//   console.log(\"enabled right lcik\");\n//   document.addEventListener(\"contextmenu\", (e) => e.preventDefault());\n// }\n// setCanRightClick(!canRightClick);\n};return/*#__PURE__*/_jsxs(StartMenuContainer,{themeState:themeState,children:[/*#__PURE__*/_jsx(StartMenuButton,{onClick:selectAndChangeRandomColor,themeState:themeState,children:\"change color\"}),/*#__PURE__*/_jsx(StartMenuButton,{onClick:toggleDarkMode,themeState:themeState,children:\"toggle dark mode\"}),/*#__PURE__*/_jsx(StartMenuButton,{onClick:rightClickToggle,themeState:themeState,children:canRightClick?\"disabled right click\":\"enable right click\"})]});};export default StartMenu;","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/BottomBar/StartMenu.tsx"],"names":["useContext","useState","StartMenuButton","StartMenuContainer","ThemeContext","StartMenu","themeState","canRightClick","setCanRightClick","themeChangeMap","isDark","setIsDark","selectAndChangeRandomColor","pink","toggleDarkMode","dark","light","rightClickToggle"],"mappings":"6HAAA,OAA4BA,UAA5B,CAAwCC,QAAxC,KAAmE,OAAnE,CACA,OAASC,eAAT,CAA0BC,kBAA1B,KAAoD,iBAApD,CAGA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,C,wFAEA,GAAMC,CAAAA,SAA6C,CAAG,QAAhDA,CAAAA,SAAgD,MAAqD,IAAlDC,CAAAA,UAAkD,MAAlDA,UAAkD,CAAtCC,aAAsC,MAAtCA,aAAsC,CAAvBC,gBAAuB,MAAvBA,gBAAuB,CACzG,gBAA2BR,UAAU,CAACI,YAAD,CAArC,CAAQK,cAAR,aAAQA,cAAR,CACA,cAA4BR,QAAQ,CAAU,KAAV,CAApC,wCAAOS,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CACvC;AACAH,cAAc,CAACI,IAAf,GACD,CAHD,CAKA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BJ,MAAM,CAAGD,cAAc,CAACM,IAAf,EAAH,CAA2BN,cAAc,CAACO,KAAf,EAAjC,CACAL,SAAS,CAAC,CAACD,MAAF,CAAT,CACD,CAHD,CAKA,GAAMO,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAVD,CAYA,mBACE,MAAC,kBAAD,EAAoB,UAAU,CAAEX,UAAhC,wBACE,KAAC,eAAD,EAAiB,OAAO,CAAEM,0BAA1B,CAAsD,UAAU,CAAEN,UAAlE,0BADF,cAIE,KAAC,eAAD,EAAiB,OAAO,CAAEQ,cAA1B,CAA0C,UAAU,CAAER,UAAtD,8BAJF,cAOE,KAAC,eAAD,EAAiB,OAAO,CAAEW,gBAA1B,CAA4C,UAAU,CAAEX,UAAxD,UACGC,aAAa,CAAG,sBAAH,CAA4B,oBAD5C,EAPF,GADF,CAaD,CAvCD,CAyCA,cAAeF,CAAAA,SAAf","sourcesContent":["import { FunctionComponent, useContext, useState, useEffect } from \"react\";\nimport { StartMenuButton, StartMenuContainer } from \"./styles/styled\";\nimport { IStartMenuProps } from \"./types/interfaces\";\n\nimport ThemeContext from \"../../context/theme/themeContext\";\n\nconst StartMenu: FunctionComponent<IStartMenuProps> = ({ themeState, canRightClick, setCanRightClick }) => {\n  const { themeChangeMap } = useContext(ThemeContext);\n  const [isDark, setIsDark] = useState<boolean>(false);\n\n  const selectAndChangeRandomColor = () => {\n    //! Dark theme is not great nor the back groind colors.\n    themeChangeMap.pink();\n  };\n\n  const toggleDarkMode = () => {\n    isDark ? themeChangeMap.dark() : themeChangeMap.light();\n    setIsDark(!isDark);\n  };\n\n  const rightClickToggle = () => {\n    // if (canRightClick) {\n    //   console.log(\"Displable right click\");\n    //   document.removeEventListener(\"contextmenu\", (e) => e.preventDefault());\n    // }\n    // if (!canRightClick) {\n    //   console.log(\"enabled right lcik\");\n    //   document.addEventListener(\"contextmenu\", (e) => e.preventDefault());\n    // }\n    // setCanRightClick(!canRightClick);\n  };\n\n  return (\n    <StartMenuContainer themeState={themeState}>\n      <StartMenuButton onClick={selectAndChangeRandomColor} themeState={themeState}>\n        change color\n      </StartMenuButton>\n      <StartMenuButton onClick={toggleDarkMode} themeState={themeState}>\n        toggle dark mode\n      </StartMenuButton>\n      <StartMenuButton onClick={rightClickToggle} themeState={themeState}>\n        {canRightClick ? \"disabled right click\" : \"enable right click\"}\n      </StartMenuButton>\n    </StartMenuContainer>\n  );\n};\n\nexport default StartMenu;\n"]},"metadata":{},"sourceType":"module"}