{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/client/src/context/theme/themeState.tsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport ThemeReducer from \"./themeReducer\";\nimport ThemeContext from \"./themeContext\";\nimport { SET_DARK_THEME, SET_LIGHT_THEME, SET_BLUE_THEME, SET_PEACH_THEME, SET_PINK_THEME, SET_PURPLE_THEME, SET_TURQUOISE_THEME } from \"./types\";\nimport { lightThemeDefault, darkThemeDefault, KobayashiColors } from \"./colorSchemes\"; //!\n//!\n//! PUT ALL THESE INFO ONE FUNCTION FOR THE CHANGE IF POSSIBLE....\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeState = props => {\n  _s();\n\n  const savedTheme = localStorage.getItem(\"theme\") ? JSON.parse(localStorage.getItem(\"theme\")) : null;\n  const defaultState = lightThemeDefault;\n  const [theme, dispatch] = useReducer(ThemeReducer, defaultState);\n\n  const setLightTheme = () => {\n    dispatch({\n      type: SET_LIGHT_THEME,\n      payload: lightThemeDefault\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      ...lightThemeDefault\n    }));\n    return { ...theme,\n      ...lightThemeDefault\n    };\n  };\n\n  const setDarkTheme = () => {\n    dispatch({\n      type: SET_DARK_THEME,\n      payload: darkThemeDefault\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      ...darkThemeDefault\n    }));\n    return { ...theme,\n      ...darkThemeDefault\n    };\n  };\n\n  const setPinkColor = () => {\n    const newTheme = { ...theme,\n      backgroundColor: KobayashiColors.pink.background,\n      terminalColor: KobayashiColors.pink.terminal\n    };\n    dispatch({\n      type: SET_PINK_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n    return newTheme;\n  };\n\n  const setPeachColor = () => {\n    const newTheme = { ...theme,\n      backgroundColor: KobayashiColors.peach.background,\n      terminalColor: KobayashiColors.peach.terminal\n    };\n    dispatch({\n      type: SET_PEACH_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n    return newTheme;\n  };\n\n  const setTurquoiseColor = () => {\n    const newTheme = { ...theme,\n      backgroundColor: KobayashiColors.turquoise.background,\n      terminalColor: KobayashiColors.turquoise.terminal\n    };\n    dispatch({\n      type: SET_TURQUOISE_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n    return newTheme;\n  };\n\n  const setPurpleColor = () => {\n    const newTheme = { ...theme,\n      backgroundColor: KobayashiColors.purple.background,\n      terminalColor: KobayashiColors.purple.terminal\n    };\n    dispatch({\n      type: SET_PURPLE_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n    return newTheme;\n  };\n\n  const setBlueColor = () => {\n    const newTheme = { ...theme,\n      backgroundColor: KobayashiColors.blue.background,\n      terminalColor: KobayashiColors.blue.terminal\n    };\n    dispatch({\n      type: SET_BLUE_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n    return newTheme;\n  };\n\n  const themeChangeMap = {\n    light: setLightTheme,\n    dark: setDarkTheme,\n    blue: setBlueColor,\n    peach: setPeachColor,\n    turquoise: setTurquoiseColor,\n    purple: setPurpleColor,\n    pink: setPinkColor\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      themeChangeMap\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeState, \"Hc6P2Un5PkKIP7V9/nTL2tP0MLE=\");\n\n_c = ThemeState;\nexport default ThemeState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeState\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/context/theme/themeState.tsx"],"names":["useReducer","ThemeReducer","ThemeContext","SET_DARK_THEME","SET_LIGHT_THEME","SET_BLUE_THEME","SET_PEACH_THEME","SET_PINK_THEME","SET_PURPLE_THEME","SET_TURQUOISE_THEME","lightThemeDefault","darkThemeDefault","KobayashiColors","ThemeState","props","savedTheme","localStorage","getItem","JSON","parse","defaultState","theme","dispatch","setLightTheme","type","payload","setItem","stringify","setDarkTheme","setPinkColor","newTheme","backgroundColor","pink","background","terminalColor","terminal","setPeachColor","peach","setTurquoiseColor","turquoise","setPurpleColor","purple","setBlueColor","blue","themeChangeMap","light","dark","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport ThemeReducer from \"./themeReducer\";\nimport ThemeContext from \"./themeContext\";\nimport {\n  SET_DARK_THEME,\n  SET_LIGHT_THEME,\n  SET_BLUE_THEME,\n  SET_PEACH_THEME,\n  SET_PINK_THEME,\n  SET_PURPLE_THEME,\n  SET_TURQUOISE_THEME,\n  IPropsState,\n} from \"./types\";\nimport { lightThemeDefault, darkThemeDefault, KobayashiColors } from \"./colorSchemes\";\n\n//!\n//!\n//! PUT ALL THESE INFO ONE FUNCTION FOR THE CHANGE IF POSSIBLE....\n\nconst ThemeState = (props: IPropsState) => {\n  const savedTheme = localStorage.getItem(\"theme\") ? JSON.parse(localStorage.getItem(\"theme\")!) : null;\n  const defaultState = lightThemeDefault;\n\n  const [theme, dispatch] = useReducer(ThemeReducer, defaultState);\n\n  const setLightTheme = () => {\n    dispatch({ type: SET_LIGHT_THEME, payload: lightThemeDefault });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme, ...lightThemeDefault }));\n    return { ...theme, ...lightThemeDefault };\n  };\n\n  const setDarkTheme = () => {\n    dispatch({ type: SET_DARK_THEME, payload: darkThemeDefault });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme, ...darkThemeDefault }));\n    return { ...theme, ...darkThemeDefault };\n  };\n\n  const setPinkColor = () => {\n    const newTheme = {\n      ...theme,\n      backgroundColor: KobayashiColors.pink.background,\n      terminalColor: KobayashiColors.pink.terminal,\n    };\n\n    dispatch({ type: SET_PINK_THEME, payload: KobayashiColors });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n\n    return newTheme;\n  };\n\n  const setPeachColor = () => {\n    const newTheme = {\n      ...theme,\n      backgroundColor: KobayashiColors.peach.background,\n      terminalColor: KobayashiColors.peach.terminal,\n    };\n\n    dispatch({ type: SET_PEACH_THEME, payload: KobayashiColors });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n\n    return newTheme;\n  };\n\n  const setTurquoiseColor = () => {\n    const newTheme = {\n      ...theme,\n      backgroundColor: KobayashiColors.turquoise.background,\n      terminalColor: KobayashiColors.turquoise.terminal,\n    };\n\n    dispatch({ type: SET_TURQUOISE_THEME, payload: KobayashiColors });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n\n    return newTheme;\n  };\n\n  const setPurpleColor = () => {\n    const newTheme = {\n      ...theme,\n      backgroundColor: KobayashiColors.purple.background,\n      terminalColor: KobayashiColors.purple.terminal,\n    };\n\n    dispatch({ type: SET_PURPLE_THEME, payload: KobayashiColors });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n\n    return newTheme;\n  };\n\n  const setBlueColor = () => {\n    const newTheme = {\n      ...theme,\n      backgroundColor: KobayashiColors.blue.background,\n      terminalColor: KobayashiColors.blue.terminal,\n    };\n\n    dispatch({ type: SET_BLUE_THEME, payload: KobayashiColors });\n    localStorage.setItem(\"theme\", JSON.stringify(newTheme));\n\n    return newTheme;\n  };\n\n  const themeChangeMap = {\n    light: setLightTheme,\n    dark: setDarkTheme,\n    blue: setBlueColor,\n    peach: setPeachColor,\n    turquoise: setTurquoiseColor,\n    purple: setPurpleColor,\n    pink: setPinkColor,\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        themeChangeMap,\n      }}\n    >\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeState;\n"]},"metadata":{},"sourceType":"module"}