{"ast":null,"code":"import _slicedToArray from\"/Users/r/Desktop/portfolio-final/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useContext,useState}from\"react\";import{StartMenuButton,StartMenuContainer}from\"./styles/styled\";import ThemeContext from\"../../context/theme/themeContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StartMenu=function StartMenu(_ref){var themeState=_ref.themeState,canRightClick=_ref.canRightClick,setCanRightClick=_ref.setCanRightClick;var _useContext=useContext(ThemeContext),themeChangeMap=_useContext.themeChangeMap,setLightTheme=_useContext.setLightTheme,setDarkTheme=_useContext.setDarkTheme;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDark=_useState2[0],setIsDark=_useState2[1];// Little hacky..\nvar selectAndChangeRandomColor=function selectAndChangeRandomColor(){var mapToArray=Object.entries(themeChangeMap);var randomChoice=Math.floor(Math.random()*mapToArray.length);mapToArray[randomChoice][1]();};var toggleDarkMode=function toggleDarkMode(){isDark?setDarkTheme():setLightTheme();setIsDark(!isDark);};return/*#__PURE__*/_jsxs(StartMenuContainer,{themeState:themeState,children:[/*#__PURE__*/_jsx(StartMenuButton,{onClick:selectAndChangeRandomColor,themeState:themeState,children:\"change color\"}),/*#__PURE__*/_jsx(StartMenuButton,{onClick:toggleDarkMode,themeState:themeState,children:\"toggle dark mode\"})]});};export default StartMenu;","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/BottomBar/StartMenu.tsx"],"names":["useContext","useState","StartMenuButton","StartMenuContainer","ThemeContext","StartMenu","themeState","canRightClick","setCanRightClick","themeChangeMap","setLightTheme","setDarkTheme","isDark","setIsDark","selectAndChangeRandomColor","mapToArray","Object","entries","randomChoice","Math","floor","random","length","toggleDarkMode"],"mappings":"6HAAA,OAA4BA,UAA5B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,OAASC,eAAT,CAA0BC,kBAA1B,KAAoD,iBAApD,CAGA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,C,wFAEA,GAAMC,CAAAA,SAA6C,CAAG,QAAhDA,CAAAA,SAAgD,MAAqD,IAAlDC,CAAAA,UAAkD,MAAlDA,UAAkD,CAAtCC,aAAsC,MAAtCA,aAAsC,CAAvBC,gBAAuB,MAAvBA,gBAAuB,CACzG,gBAAwDR,UAAU,CAACI,YAAD,CAAlE,CAAQK,cAAR,aAAQA,cAAR,CAAwBC,aAAxB,aAAwBA,aAAxB,CAAuCC,YAAvC,aAAuCA,YAAvC,CACA,cAA4BV,QAAQ,CAAU,KAAV,CAApC,wCAAOW,MAAP,eAAeC,SAAf,eAEA;AACA,GAAMC,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CACvC,GAAMC,CAAAA,UAAgC,CAAGC,MAAM,CAACC,OAAP,CAAeR,cAAf,CAAzC,CACA,GAAMS,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBN,UAAU,CAACO,MAAtC,CAArB,CACAP,UAAU,CAACG,YAAD,CAAV,CAAyB,CAAzB,IACD,CAJD,CAMA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BX,MAAM,CAAGD,YAAY,EAAf,CAAoBD,aAAa,EAAvC,CACAG,SAAS,CAAC,CAACD,MAAF,CAAT,CACD,CAHD,CAKA,mBACE,MAAC,kBAAD,EAAoB,UAAU,CAAEN,UAAhC,wBACE,KAAC,eAAD,EAAiB,OAAO,CAAEQ,0BAA1B,CAAsD,UAAU,CAAER,UAAlE,0BADF,cAIE,KAAC,eAAD,EAAiB,OAAO,CAAEiB,cAA1B,CAA0C,UAAU,CAAEjB,UAAtD,8BAJF,GADF,CAUD,CA1BD,CA4BA,cAAeD,CAAAA,SAAf","sourcesContent":["import { FunctionComponent, useContext, useState } from \"react\";\nimport { StartMenuButton, StartMenuContainer } from \"./styles/styled\";\nimport { IStartMenuProps } from \"./types/interfaces\";\n\nimport ThemeContext from \"../../context/theme/themeContext\";\n\nconst StartMenu: FunctionComponent<IStartMenuProps> = ({ themeState, canRightClick, setCanRightClick }) => {\n  const { themeChangeMap, setLightTheme, setDarkTheme } = useContext(ThemeContext);\n  const [isDark, setIsDark] = useState<boolean>(false);\n\n  // Little hacky..\n  const selectAndChangeRandomColor = () => {\n    const mapToArray: [string, Function][] = Object.entries(themeChangeMap);\n    const randomChoice = Math.floor(Math.random() * mapToArray.length);\n    mapToArray[randomChoice][1]();\n  };\n\n  const toggleDarkMode = () => {\n    isDark ? setDarkTheme() : setLightTheme();\n    setIsDark(!isDark);\n  };\n\n  return (\n    <StartMenuContainer themeState={themeState}>\n      <StartMenuButton onClick={selectAndChangeRandomColor} themeState={themeState}>\n        change color\n      </StartMenuButton>\n      <StartMenuButton onClick={toggleDarkMode} themeState={themeState}>\n        toggle dark mode\n      </StartMenuButton>\n    </StartMenuContainer>\n  );\n};\n\nexport default StartMenu;\n"]},"metadata":{},"sourceType":"module"}