{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/client/src/main.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { AppContainer } from \"./styles/styled\";\nimport { isMobile } from \"react-device-detect\";\nimport ThemeContext from \"./context/theme/themeContext\";\nimport WindowContext from \"./context/window/windowContext\";\nimport { PageContainer } from \"./components/Login/styles/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [selectedIcon, setSelectedIcon] = useState(null);\n  const viewport = window.visualViewport;\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const {\n    windowState\n  } = useContext(WindowContext);\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    themeState: theme,\n    mobileHeight: viewport.height,\n    isMobile: isMobile,\n    children: /*#__PURE__*/_jsxDEV(PageContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"2pdl7H/RJYCxKady+/k1m1udKaI=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/main.tsx"],"names":["useContext","useState","AppContainer","isMobile","ThemeContext","WindowContext","PageContainer","Home","selectedIcon","setSelectedIcon","viewport","window","visualViewport","theme","windowState","height"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,aAAT,QAA8B,kCAA9B;;AAWA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAgB,IAAhB,CAAhD;AACA,QAAMS,QAAQ,GAAGC,MAAM,CAACC,cAAxB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYb,UAAU,CAACI,YAAD,CAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAkBd,UAAU,CAACK,aAAD,CAAlC;AAEA,sBACE,QAAC,YAAD;AAAc,IAAA,UAAU,EAAEQ,KAA1B;AAAiC,IAAA,YAAY,EAAEH,QAAQ,CAACK,MAAxD;AAAgE,IAAA,QAAQ,EAAEZ,QAA1E;AAAA,2BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8GD;;GApHuBI,I;;KAAAA,I","sourcesContent":["import { useContext, useState } from \"react\";\nimport { AppContainer } from \"./styles/styled\";\nimport { isMobile } from \"react-device-detect\";\n\nimport ThemeContext from \"./context/theme/themeContext\";\nimport WindowContext from \"./context/window/windowContext\";\nimport { PageContainer } from \"./components/Login/styles/styled\";\n\nimport { IWindowObject } from \"./interfaces/types\";\nimport { EWindowTypes } from \"./interfaces/types\";\nimport { EPageNames } from \"./interfaces/types\";\n\nimport Icon from \"./components/Icons/Index\";\nimport BottomBar from \"./components/BottomBar/Index\";\nimport Window from \"./components/Window/Index\";\nimport { DesktopContainer } from \"./components/InnerPages/styles/styled\";\n\nexport default function Home() {\n  const [selectedIcon, setSelectedIcon] = useState<string | null>(null);\n  const viewport = window.visualViewport;\n  const { theme } = useContext(ThemeContext);\n  const { windowState } = useContext(WindowContext);\n\n  return (\n    <AppContainer themeState={theme} mobileHeight={viewport.height} isMobile={isMobile}>\n      <PageContainer />\n      {/* <p style={{ position: \"absolute\", top: 10, right: 10 }}>\n        CURRENTLY UNDER CONSTRUCTION - SHOULD BE FINISHED SOON! CHECK BACK LATER :)\n      </p>\n      <DesktopContainer>\n        <Icon\n          themeState={theme}\n          pageName={EPageNames.about}\n          data={null}\n          text={EPageNames.about}\n          windowType={EWindowTypes.sidebar}\n          aniDelay={0.1}\n          isWeb={null}\n          selectedIcon={selectedIcon}\n          setSelectedIcon={setSelectedIcon}\n        />\n\n        <Icon\n          themeState={theme}\n          pageName={EPageNames.projects}\n          data={null}\n          text={EPageNames.projects}\n          windowType={EWindowTypes.sidebar}\n          aniDelay={0.4}\n          isWeb={null}\n          selectedIcon={selectedIcon}\n          setSelectedIcon={setSelectedIcon}\n        />\n\n        <Icon\n          themeState={theme}\n          pageName={EPageNames.blog}\n          data={null}\n          text={EPageNames.blog}\n          windowType={EWindowTypes.noSidebar}\n          aniDelay={0.7}\n          isWeb={null}\n          selectedIcon={selectedIcon}\n          setSelectedIcon={setSelectedIcon}\n        />\n\n        <Icon\n          themeState={theme}\n          pageName={EPageNames.contact}\n          data={null}\n          text={EPageNames.contact}\n          windowType={EWindowTypes.sidebar}\n          aniDelay={0.9}\n          isWeb={null}\n          selectedIcon={selectedIcon}\n          setSelectedIcon={setSelectedIcon}\n        />\n\n        <Icon\n          themeState={theme}\n          pageName={EPageNames.twitter}\n          data={null}\n          text={EPageNames.twitter}\n          windowType={EWindowTypes.noSidebar}\n          aniDelay={1.1}\n          isWeb={\"https://www.twitter.com/russellcareyy\"}\n          selectedIcon={selectedIcon}\n          setSelectedIcon={setSelectedIcon}\n        />\n\n        <Icon\n          themeState={theme}\n          pageName={EPageNames.github}\n          data={null}\n          text={EPageNames.github}\n          windowType={EWindowTypes.noSidebar}\n          aniDelay={1.2}\n          isWeb={\"https://www.github.com/russellcarey\"}\n          selectedIcon={selectedIcon}\n          setSelectedIcon={setSelectedIcon}\n        />\n\n        <Icon\n          themeState={theme}\n          pageName={EPageNames.linkedin}\n          data={null}\n          text={EPageNames.linkedin}\n          windowType={EWindowTypes.noSidebar}\n          aniDelay={1.3}\n          isWeb={\"https://www.linkedin.com/in/russell-carey-b199bb19a/\"}\n          selectedIcon={selectedIcon}\n          setSelectedIcon={setSelectedIcon}\n        />\n\n        {windowState.windows && windowState.windows.length > 0\n          ? windowState.windows.map((w: IWindowObject) => {\n              return (\n                <Window\n                  key={w.id}\n                  pageName={w.pageName}\n                  themeState={theme}\n                  id={w.id}\n                  windowType={w.windowType}\n                  data={w.data}\n                  windowList={windowState.windows}\n                />\n              );\n            })\n          : null}\n      </DesktopContainer>\n      <BottomBar /> */}\n    </AppContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}