{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/src/context/window/windowState.tsx\",\n    _s = $RefreshSig$();\n\nimport { SET_ACTIVE_WINDOW, CREATE_NEW_WINDOW, DESTROY_ACTIVE_WINDOW } from \"./types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useReducer } from \"react\";\nimport WindowReducer from \"./windowReducer\";\nimport WindowContext from \"./windowContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WindowState = props => {\n  _s();\n\n  const initialState = {\n    currentWindowID: null,\n    windows: []\n  };\n  const [windowState, dispatch] = useReducer(WindowReducer, initialState); // Create and populate a new window.\n\n  const createNewWindow = (pageName, windowType, data, isProject) => {\n    const newWindow = {\n      themeState: \"\",\n      pageName,\n      data,\n      id: uuidv4(),\n      windowType,\n      isProject,\n      windowList: null\n    };\n    dispatch({\n      type: CREATE_NEW_WINDOW,\n      payload: newWindow\n    });\n  }; // Set Active Window\n\n\n  const setActiveWindow = id => {\n    dispatch({\n      type: SET_ACTIVE_WINDOW,\n      payload: id\n    });\n  }; // Delete window from the view\n\n\n  const deleteActiveWindow = id => {\n    const filteredList = windowState.windows.filter(window => window.id !== id);\n    dispatch({\n      type: DESTROY_ACTIVE_WINDOW,\n      payload: filteredList\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(WindowContext.Provider, {\n    value: {\n      windowState,\n      createNewWindow,\n      setActiveWindow,\n      deleteActiveWindow\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WindowState, \"ccqQKVfrL21A7LO+STgm52b4DeA=\");\n\n_c = WindowState;\nexport default WindowState;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowState\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/context/window/windowState.tsx"],"names":["SET_ACTIVE_WINDOW","CREATE_NEW_WINDOW","DESTROY_ACTIVE_WINDOW","v4","uuidv4","React","useReducer","WindowReducer","WindowContext","WindowState","props","initialState","currentWindowID","windows","windowState","dispatch","createNewWindow","pageName","windowType","data","isProject","newWindow","themeState","id","windowList","type","payload","setActiveWindow","deleteActiveWindow","filteredList","filter","window","children"],"mappings":";;;AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,EAA+CC,qBAA/C,QAAoG,SAApG;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAOC,KAAP,IAAgBC,UAAhB,QAA8C,OAA9C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAIA,MAAMC,WAAW,GAAIC,KAAD,IAAgB;AAAA;;AAClC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,eAAe,EAAE,IADE;AAEnBC,IAAAA,OAAO,EAAE;AAFU,GAArB;AAKA,QAAM,CAACC,WAAD,EAAcC,QAAd,IAA0BT,UAAU,CAACC,aAAD,EAAgBI,YAAhB,CAA1C,CANkC,CAQlC;;AACA,QAAMK,eAAe,GAAG,CAACC,QAAD,EAAmBC,UAAnB,EAAuCC,IAAvC,EAAkDC,SAAlD,KAAyE;AAC/F,UAAMC,SAAS,GAAG;AAChBC,MAAAA,UAAU,EAAE,EADI;AAEhBL,MAAAA,QAFgB;AAGhBE,MAAAA,IAHgB;AAIhBI,MAAAA,EAAE,EAAEnB,MAAM,EAJM;AAKhBc,MAAAA,UALgB;AAMhBE,MAAAA,SANgB;AAOhBI,MAAAA,UAAU,EAAE;AAPI,KAAlB;AAUAT,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAExB,iBAAR;AAA2ByB,MAAAA,OAAO,EAAEL;AAApC,KAAD,CAAR;AACD,GAZD,CATkC,CAuBlC;;;AACA,QAAMM,eAAe,GAAIJ,EAAD,IAAgB;AACtCR,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEzB,iBAAR;AAA2B0B,MAAAA,OAAO,EAAEH;AAApC,KAAD,CAAR;AACD,GAFD,CAxBkC,CA4BlC;;;AACA,QAAMK,kBAAkB,GAAIL,EAAD,IAAgB;AACzC,UAAMM,YAAY,GAAGf,WAAW,CAACD,OAAZ,CAAoBiB,MAApB,CAA4BC,MAAD,IAA2BA,MAAM,CAACR,EAAP,KAAcA,EAApE,CAArB;AACAR,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEvB,qBAAR;AAA+BwB,MAAAA,OAAO,EAAEG;AAAxC,KAAD,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLf,MAAAA,WADK;AAELE,MAAAA,eAFK;AAGLW,MAAAA,eAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGlB,KAAK,CAACsB;AART;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9CD;;GAAMvB,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import { SET_ACTIVE_WINDOW, CREATE_NEW_WINDOW, DESTROY_ACTIVE_WINDOW, MINIMIZE_ACTIVE_WINDOW } from \"./types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport React, { useReducer, useContext } from \"react\";\nimport WindowReducer from \"./windowReducer\";\nimport WindowContext from \"./windowContext\";\n\nimport { IWindowObject } from \"./types\";\n\nconst WindowState = (props: any) => {\n  const initialState = {\n    currentWindowID: null,\n    windows: [],\n  };\n\n  const [windowState, dispatch] = useReducer(WindowReducer, initialState);\n\n  // Create and populate a new window.\n  const createNewWindow = (pageName: string, windowType: string, data: any, isProject: boolean) => {\n    const newWindow = {\n      themeState: \"\",\n      pageName,\n      data,\n      id: uuidv4(),\n      windowType,\n      isProject,\n      windowList: null,\n    };\n\n    dispatch({ type: CREATE_NEW_WINDOW, payload: newWindow });\n  };\n\n  // Set Active Window\n  const setActiveWindow = (id: string) => {\n    dispatch({ type: SET_ACTIVE_WINDOW, payload: id });\n  };\n\n  // Delete window from the view\n  const deleteActiveWindow = (id: string) => {\n    const filteredList = windowState.windows.filter((window: IWindowObject) => window.id !== id);\n    dispatch({ type: DESTROY_ACTIVE_WINDOW, payload: filteredList });\n  };\n\n  return (\n    <WindowContext.Provider\n      value={{\n        windowState,\n        createNewWindow,\n        setActiveWindow,\n        deleteActiveWindow,\n      }}\n    >\n      {props.children}\n    </WindowContext.Provider>\n  );\n};\n\nexport default WindowState;\n"]},"metadata":{},"sourceType":"module"}