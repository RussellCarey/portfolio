{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/src/components/Icons/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { IconContainer, IconText } from \"./styles/styled\";\nimport WindowContext from \"../../context/window/windowContext\";\nimport IconMenu from \"./IconMenu\";\nimport IconSquare from \"./IconSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IconMain = _ref => {\n  _s();\n\n  let {\n    pageName,\n    windowType,\n    themeState,\n    isWeb,\n    aniDelay,\n    selectedIcon,\n    setSelectedIcon\n  } = _ref;\n  const windowContext = useContext(WindowContext);\n  const {\n    createNewWindow\n  } = windowContext;\n  const clickPosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const [showMenu, setShowMenu] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n  useEffect(() => {\n    if (selectedIcon === pageName) setIsSelected(true);\n    if (selectedIcon !== pageName) setIsSelected(false);\n    if (selectedIcon !== pageName) setShowMenu(false);\n  }, [selectedIcon, pageName]); // ON one click - change the color of the text background\n\n  const onClickHandler = e => {\n    if (e.button === 0) {\n      setSelectedIcon(pageName);\n    }\n\n    if (e.button === 2) {\n      setSelectedIcon(pageName);\n      setShowMenu(true);\n      clickPosition.current = {\n        x: e.pageX,\n        y: e.pageY\n      };\n    }\n  }; // When double clicking on the icon\n\n\n  const onDoubleClickHandler = () => {\n    setShowMenu(false);\n\n    if (isWeb) {\n      return window.open(isWeb, \"_blank\");\n    } //pageName: string,// id: number,// windowType: string, // data: any,// isProject: boolean\n\n\n    createNewWindow(pageName, windowType, null, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IconContainer, {\n    onMouseDown: onClickHandler,\n    onDoubleClick: onDoubleClickHandler,\n    initial: {\n      opacity: 0,\n      y: -20\n    },\n    transition: {\n      delay: aniDelay,\n      duration: 0.5\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconSquare, {\n      themeState: themeState,\n      label: pageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconText, {\n      themeState: themeState,\n      isSelected: isSelected,\n      children: pageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconMenu, {\n      themeState: themeState,\n      top: clickPosition.current ? clickPosition.current.y + 100 : null,\n      left: clickPosition.current ? clickPosition.current.x + 200 : null,\n      display: showMenu === true ? \"flex\" : \"none\",\n      onClickHandler: onDoubleClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IconMain, \"IxFZiiBQg+Eke9hX5ZSWIDQWE14=\");\n\n_c = IconMain;\nexport default IconMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconMain\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/components/Icons/Index.tsx"],"names":["React","useState","useRef","useEffect","useContext","IconContainer","IconText","WindowContext","IconMenu","IconSquare","IconMain","pageName","windowType","themeState","isWeb","aniDelay","selectedIcon","setSelectedIcon","windowContext","createNewWindow","clickPosition","x","y","showMenu","setShowMenu","isSelected","setIsSelected","onClickHandler","e","button","current","pageX","pageY","onDoubleClickHandler","window","open","opacity","delay","duration"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, FunctionComponent, useContext } from \"react\";\nimport { IconContainer, IconText } from \"./styles/styled\";\n\nimport WindowContext from \"../../context/window/windowContext\";\n\nimport IconMenu from \"./IconMenu\";\nimport IconSquare from \"./IconSquare\";\nimport { IIconProps } from \"./types/interfaces\";\n\nconst IconMain: FunctionComponent<IIconProps> = ({\n  pageName,\n  windowType,\n  themeState,\n  isWeb,\n  aniDelay,\n  selectedIcon,\n  setSelectedIcon,\n}) => {\n  const windowContext = useContext(WindowContext);\n  const { createNewWindow } = windowContext;\n\n  const clickPosition = useRef<{ x: number; y: number }>({ x: 0, y: 0 });\n  const [showMenu, setShowMenu] = useState<boolean>(false);\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (selectedIcon === pageName) setIsSelected(true);\n    if (selectedIcon !== pageName) setIsSelected(false);\n    if (selectedIcon !== pageName) setShowMenu(false);\n  }, [selectedIcon, pageName]);\n\n  // ON one click - change the color of the text background\n  const onClickHandler = (e: React.MouseEvent) => {\n    if (e.button === 0) {\n      setSelectedIcon(pageName);\n    }\n\n    if (e.button === 2) {\n      setSelectedIcon(pageName);\n      setShowMenu(true);\n      clickPosition.current = { x: e.pageX, y: e.pageY };\n    }\n  };\n\n  // When double clicking on the icon\n  const onDoubleClickHandler = () => {\n    setShowMenu(false);\n\n    if (isWeb) {\n      return window.open(isWeb, \"_blank\");\n    }\n\n    //pageName: string,// id: number,// windowType: string, // data: any,// isProject: boolean\n    createNewWindow(pageName, windowType, null, false);\n  };\n\n  return (\n    <IconContainer\n      onMouseDown={onClickHandler}\n      onDoubleClick={onDoubleClickHandler}\n      initial={{ opacity: 0, y: -20 }}\n      transition={{ delay: aniDelay, duration: 0.5 }}\n      animate={{ opacity: 1, y: 0 }}\n    >\n      <IconSquare themeState={themeState} label={pageName} />\n\n      <IconText themeState={themeState} isSelected={isSelected}>\n        {pageName}\n      </IconText>\n\n      <IconMenu\n        themeState={themeState}\n        top={clickPosition.current ? clickPosition.current.y + 100 : null}\n        left={clickPosition.current ? clickPosition.current.x + 200 : null}\n        display={showMenu === true ? \"flex\" : \"none\"}\n        onClickHandler={onDoubleClickHandler}\n      />\n    </IconContainer>\n  );\n};\n\nexport default IconMain;\n"]},"metadata":{},"sourceType":"module"}