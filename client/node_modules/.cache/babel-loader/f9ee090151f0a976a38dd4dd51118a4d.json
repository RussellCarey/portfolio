{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/client/src/components/Icons/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { IconContainer, IconText } from \"./styles/styled\";\nimport WindowContext from \"../../context/window/windowContext\";\nimport ThemeContext from \"../../context/theme/themeContext\";\nimport IconSquare from \"./IconSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IconMain = _ref => {\n  _s();\n\n  let {\n    pageName,\n    text,\n    windowType,\n    isWeb,\n    aniDelay,\n    selectedIcon,\n    setSelectedIcon,\n    isProject\n  } = _ref;\n  const {\n    createNewWindow\n  } = useContext(WindowContext);\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const [isSelected, setIsSelected] = useState(false);\n  useEffect(() => {\n    if (selectedIcon === pageName) setIsSelected(true);\n    if (selectedIcon !== pageName) setIsSelected(false);\n  }, [selectedIcon, pageName]); // ON one click - change the color of the text background\n\n  const onClickHandler = e => {\n    if (e.button === 0) {\n      setSelectedIcon(pageName);\n    }\n  }; // When double clicking on the icon\n\n\n  const onDoubleClickHandler = () => {\n    if (isWeb) return window.open(isWeb, \"_blank\"); //pageName: string,// id: number,// windowType: string, // data: any,// isProject: boolean\n\n    createNewWindow(pageName, windowType, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IconContainer, {\n    onMouseDown: onClickHandler,\n    onDoubleClick: onDoubleClickHandler,\n    initial: {\n      opacity: 0,\n      y: -20\n    },\n    transition: {\n      delay: aniDelay,\n      duration: 0.5\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconSquare, {\n      themeState: themeState,\n      label: pageName,\n      name: text,\n      isProject: isProject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconText, {\n      themeState: themeState,\n      isSelected: isSelected,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IconMain, \"rL0hW97drBysOoVCtCrvS9FMdbo=\");\n\n_c = IconMain;\nexport default IconMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconMain\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/Icons/Index.tsx"],"names":["React","useState","useEffect","useContext","IconContainer","IconText","WindowContext","ThemeContext","IconSquare","IconMain","pageName","text","windowType","isWeb","aniDelay","selectedIcon","setSelectedIcon","isProject","createNewWindow","theme","isSelected","setIsSelected","onClickHandler","e","button","onDoubleClickHandler","window","open","opacity","y","delay","duration","themeState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAwDC,UAAxD,QAA0E,OAA1E;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,iBAAxC;AAEA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;;AAGA,MAAMC,QAAuC,GAAG,QAS1C;AAAA;;AAAA,MAT2C;AAC/CC,IAAAA,QAD+C;AAE/CC,IAAAA,IAF+C;AAG/CC,IAAAA,UAH+C;AAI/CC,IAAAA,KAJ+C;AAK/CC,IAAAA,QAL+C;AAM/CC,IAAAA,YAN+C;AAO/CC,IAAAA,eAP+C;AAQ/CC,IAAAA;AAR+C,GAS3C;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAsBf,UAAU,CAACG,aAAD,CAAtC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAYhB,UAAU,CAACI,YAAD,CAA5B;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAU,KAAV,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,YAAY,KAAKL,QAArB,EAA+BW,aAAa,CAAC,IAAD,CAAb;AAC/B,QAAIN,YAAY,KAAKL,QAArB,EAA+BW,aAAa,CAAC,KAAD,CAAb;AAChC,GAHQ,EAGN,CAACN,YAAD,EAAeL,QAAf,CAHM,CAAT,CALI,CAUJ;;AACA,QAAMY,cAAc,GAAIC,CAAD,IAAyB;AAC9C,QAAIA,CAAC,CAACC,MAAF,KAAa,CAAjB,EAAoB;AAClBR,MAAAA,eAAe,CAACN,QAAD,CAAf;AACD;AACF,GAJD,CAXI,CAiBJ;;;AACA,QAAMe,oBAAoB,GAAG,MAAM;AACjC,QAAIZ,KAAJ,EAAW,OAAOa,MAAM,CAACC,IAAP,CAAYd,KAAZ,EAAmB,QAAnB,CAAP,CADsB,CAGjC;;AACAK,IAAAA,eAAe,CAACR,QAAD,EAAWE,UAAX,EAAuB,KAAvB,CAAf;AACD,GALD;;AAOA,sBACE,QAAC,aAAD;AACE,IAAA,WAAW,EAAEU,cADf;AAEE,IAAA,aAAa,EAAEG,oBAFjB;AAGE,IAAA,OAAO,EAAE;AAAEG,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,CAAC,EAAE,CAAC;AAAlB,KAHX;AAIE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAEhB,QAAT;AAAmBiB,MAAAA,QAAQ,EAAE;AAA7B,KAJd;AAKE,IAAA,OAAO,EAAE;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,CAAC,EAAE;AAAjB,KALX;AAAA,4BAOE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEG,UAAxB;AAAoC,MAAA,KAAK,EAAEtB,QAA3C;AAAqD,MAAA,IAAI,EAAEC,IAA3D;AAAiE,MAAA,SAAS,EAAEM;AAA5E;AAAA;AAAA;AAAA;AAAA,YAPF,eASE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEe,UAAtB;AAAkC,MAAA,UAAU,EAAEZ,UAA9C;AAAA,gBACGT;AADH;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjDD;;GAAMF,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, FunctionComponent, useContext } from \"react\";\nimport { IconContainer, IconText } from \"./styles/styled\";\n\nimport WindowContext from \"../../context/window/windowContext\";\nimport ThemeContext from \"../../context/theme/themeContext\";\n\nimport IconSquare from \"./IconSquare\";\nimport { IIconProps } from \"./types/interfaces\";\n\nconst IconMain: FunctionComponent<IIconProps> = ({\n  pageName,\n  text,\n  windowType,\n  isWeb,\n  aniDelay,\n  selectedIcon,\n  setSelectedIcon,\n  isProject,\n}) => {\n  const { createNewWindow } = useContext(WindowContext);\n  const { theme } = useContext(ThemeContext);\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (selectedIcon === pageName) setIsSelected(true);\n    if (selectedIcon !== pageName) setIsSelected(false);\n  }, [selectedIcon, pageName]);\n\n  // ON one click - change the color of the text background\n  const onClickHandler = (e: React.MouseEvent) => {\n    if (e.button === 0) {\n      setSelectedIcon(pageName);\n    }\n  };\n\n  // When double clicking on the icon\n  const onDoubleClickHandler = () => {\n    if (isWeb) return window.open(isWeb, \"_blank\");\n\n    //pageName: string,// id: number,// windowType: string, // data: any,// isProject: boolean\n    createNewWindow(pageName, windowType, false);\n  };\n\n  return (\n    <IconContainer\n      onMouseDown={onClickHandler}\n      onDoubleClick={onDoubleClickHandler}\n      initial={{ opacity: 0, y: -20 }}\n      transition={{ delay: aniDelay, duration: 0.5 }}\n      animate={{ opacity: 1, y: 0 }}\n    >\n      <IconSquare themeState={themeState} label={pageName} name={text} isProject={isProject} />\n\n      <IconText themeState={themeState} isSelected={isSelected}>\n        {text}\n      </IconText>\n    </IconContainer>\n  );\n};\n\nexport default IconMain;\n"]},"metadata":{},"sourceType":"module"}