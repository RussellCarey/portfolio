{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/src/components/Icons/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect, useContext } from \"react\";\nimport { IconContainer, IconText } from \"./styles/styled\";\nimport WindowContext from \"../../context/window/windowContext\";\nimport IconMenu from \"./IconMenu\";\nimport IconSquare from \"./IconSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IconMain = _ref => {\n  _s();\n\n  let {\n    pageName,\n    themeState,\n    isWeb,\n    aniDelay,\n    selectedIcon,\n    setSelectedIcon\n  } = _ref;\n  const windowContext = useContext(WindowContext);\n  const {\n    createNewWindow\n  } = windowContext;\n  const clickPosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const [showMenu, setShowMenu] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n  useEffect(() => {\n    if (selectedIcon === pageName) setIsSelected(true);\n    if (selectedIcon !== pageName) setIsSelected(false);\n  }, [selectedIcon, pageName]); // ON one click - change the color of the text background\n\n  const onClickHandler = e => {\n    if (e.button === 0) {\n      setSelectedIcon(pageName);\n    }\n\n    if (e.button === 2) {\n      console.log(pageName);\n      setSelectedIcon(pageName);\n    }\n  }; // When double clicking on the icon\n\n\n  const onDoubleClickHandler = () => {\n    console.log(\"DOUBLE CLICKED CREATING WINDOWWOW\"); // Function: pgname, label, id, theme, windowtype\n\n    setShowMenu(false);\n\n    if (isWeb) {\n      return window.open(isWeb, \"_blank\");\n    } //! Create a new windw\n\n\n    console.log(\"CREATING WINDOW\"); //pageName: string,// id: number,// windowType: string, // data: any,// isProject: boolean\n\n    createNewWindow(\"about\", 1, \"windowtype\", null, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IconContainer, {\n    onMouseDown: onClickHandler,\n    onDoubleClick: onDoubleClickHandler,\n    initial: {\n      opacity: 0,\n      y: -20\n    },\n    transition: {\n      delay: aniDelay,\n      duration: 0.5\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconSquare, {\n      themeState: themeState,\n      label: pageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconText, {\n      themeState: themeState,\n      isSelected: isSelected,\n      children: pageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconMenu, {\n      themeState: themeState,\n      top: clickPosition.current ? clickPosition.current.y : null,\n      left: clickPosition.current ? clickPosition.current.x : null,\n      display: showMenu === true ? \"flex\" : \"none\",\n      onClickHandler: onDoubleClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IconMain, \"IxFZiiBQg+Eke9hX5ZSWIDQWE14=\");\n\n_c = IconMain;\nexport default IconMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconMain\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/components/Icons/Index.tsx"],"names":["useState","useRef","useEffect","useContext","IconContainer","IconText","WindowContext","IconMenu","IconSquare","IconMain","pageName","themeState","isWeb","aniDelay","selectedIcon","setSelectedIcon","windowContext","createNewWindow","clickPosition","x","y","showMenu","setShowMenu","isSelected","setIsSelected","onClickHandler","e","button","console","log","onDoubleClickHandler","window","open","opacity","delay","duration","current"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,EAAyDC,UAAzD,QAA2E,OAA3E;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,iBAAxC;AAEA,OAAOC,aAAP,MAA0B,oCAA1B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAGA,MAAMC,QAAuC,GAAG,QAO1C;AAAA;;AAAA,MAP2C;AAC/CC,IAAAA,QAD+C;AAE/CC,IAAAA,UAF+C;AAG/CC,IAAAA,KAH+C;AAI/CC,IAAAA,QAJ+C;AAK/CC,IAAAA,YAL+C;AAM/CC,IAAAA;AAN+C,GAO3C;AACJ,QAAMC,aAAa,GAAGb,UAAU,CAACG,aAAD,CAAhC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAsBD,aAA5B;AAEA,QAAME,aAAa,GAAGjB,MAAM,CAAC;AAAEkB,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAA5B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAU,KAAV,CAA5C;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,YAAY,KAAKJ,QAArB,EAA+Bc,aAAa,CAAC,IAAD,CAAb;AAC/B,QAAIV,YAAY,KAAKJ,QAArB,EAA+Bc,aAAa,CAAC,KAAD,CAAb;AAChC,GAHQ,EAGN,CAACV,YAAD,EAAeJ,QAAf,CAHM,CAAT,CARI,CAaJ;;AACA,QAAMe,cAAc,GAAIC,CAAD,IAAY;AACjC,QAAIA,CAAC,CAACC,MAAF,KAAa,CAAjB,EAAoB;AAClBZ,MAAAA,eAAe,CAACL,QAAD,CAAf;AACD;;AAED,QAAIgB,CAAC,CAACC,MAAF,KAAa,CAAjB,EAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;AACAK,MAAAA,eAAe,CAACL,QAAD,CAAf;AACD;AACF,GATD,CAdI,CAyBJ;;;AACA,QAAMoB,oBAAoB,GAAG,MAAM;AACjCF,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EADiC,CAEjC;;AACAP,IAAAA,WAAW,CAAC,KAAD,CAAX;;AAEA,QAAIV,KAAJ,EAAW;AACT,aAAOmB,MAAM,CAACC,IAAP,CAAYpB,KAAZ,EAAmB,QAAnB,CAAP;AACD,KAPgC,CASjC;;;AAEAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAXiC,CAYjC;;AACAZ,IAAAA,eAAe,CAAC,OAAD,EAAU,CAAV,EAAa,YAAb,EAA2B,IAA3B,EAAiC,KAAjC,CAAf;AACD,GAdD;;AAgBA,sBACE,QAAC,aAAD;AACE,IAAA,WAAW,EAAEQ,cADf;AAEE,IAAA,aAAa,EAAEK,oBAFjB;AAGE,IAAA,OAAO,EAAE;AAAEG,MAAAA,OAAO,EAAE,CAAX;AAAcb,MAAAA,CAAC,EAAE,CAAC;AAAlB,KAHX;AAIE,IAAA,UAAU,EAAE;AAAEc,MAAAA,KAAK,EAAErB,QAAT;AAAmBsB,MAAAA,QAAQ,EAAE;AAA7B,KAJd;AAKE,IAAA,OAAO,EAAE;AAAEF,MAAAA,OAAO,EAAE,CAAX;AAAcb,MAAAA,CAAC,EAAE;AAAjB,KALX;AAAA,4BAOE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAET,UAAxB;AAAoC,MAAA,KAAK,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA,YAPF,eASE,QAAC,QAAD;AAAU,MAAA,UAAU,EAAEC,UAAtB;AAAkC,MAAA,UAAU,EAAEY,UAA9C;AAAA,gBACGb;AADH;AAAA;AAAA;AAAA;AAAA,YATF,eAaE,QAAC,QAAD;AACE,MAAA,UAAU,EAAEC,UADd;AAEE,MAAA,GAAG,EAAEO,aAAa,CAACkB,OAAd,GAAwBlB,aAAa,CAACkB,OAAd,CAAsBhB,CAA9C,GAAkD,IAFzD;AAGE,MAAA,IAAI,EAAEF,aAAa,CAACkB,OAAd,GAAwBlB,aAAa,CAACkB,OAAd,CAAsBjB,CAA9C,GAAkD,IAH1D;AAIE,MAAA,OAAO,EAAEE,QAAQ,KAAK,IAAb,GAAoB,MAApB,GAA6B,MAJxC;AAKE,MAAA,cAAc,EAAES;AALlB;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAxED;;GAAMrB,Q;;KAAAA,Q;AA0EN,eAAeA,QAAf","sourcesContent":["import { useState, useRef, useEffect, FunctionComponent, useContext } from \"react\";\nimport { IconContainer, IconText } from \"./styles/styled\";\n\nimport WindowContext from \"../../context/window/windowContext\";\n\nimport IconMenu from \"./IconMenu\";\nimport IconSquare from \"./IconSquare\";\nimport { IIconProps } from \"./types/interfaces\";\n\nconst IconMain: FunctionComponent<IIconProps> = ({\n  pageName,\n  themeState,\n  isWeb,\n  aniDelay,\n  selectedIcon,\n  setSelectedIcon,\n}) => {\n  const windowContext = useContext(WindowContext);\n  const { createNewWindow } = windowContext;\n\n  const clickPosition = useRef({ x: 0, y: 0 });\n  const [showMenu, setShowMenu] = useState(false);\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (selectedIcon === pageName) setIsSelected(true);\n    if (selectedIcon !== pageName) setIsSelected(false);\n  }, [selectedIcon, pageName]);\n\n  // ON one click - change the color of the text background\n  const onClickHandler = (e: any) => {\n    if (e.button === 0) {\n      setSelectedIcon(pageName);\n    }\n\n    if (e.button === 2) {\n      console.log(pageName);\n      setSelectedIcon(pageName);\n    }\n  };\n\n  // When double clicking on the icon\n  const onDoubleClickHandler = () => {\n    console.log(\"DOUBLE CLICKED CREATING WINDOWWOW\");\n    // Function: pgname, label, id, theme, windowtype\n    setShowMenu(false);\n\n    if (isWeb) {\n      return window.open(isWeb, \"_blank\");\n    }\n\n    //! Create a new windw\n\n    console.log(\"CREATING WINDOW\");\n    //pageName: string,// id: number,// windowType: string, // data: any,// isProject: boolean\n    createNewWindow(\"about\", 1, \"windowtype\", null, false);\n  };\n\n  return (\n    <IconContainer\n      onMouseDown={onClickHandler}\n      onDoubleClick={onDoubleClickHandler}\n      initial={{ opacity: 0, y: -20 }}\n      transition={{ delay: aniDelay, duration: 0.5 }}\n      animate={{ opacity: 1, y: 0 }}\n    >\n      <IconSquare themeState={themeState} label={pageName} />\n\n      <IconText themeState={themeState} isSelected={isSelected}>\n        {pageName}\n      </IconText>\n\n      <IconMenu\n        themeState={themeState}\n        top={clickPosition.current ? clickPosition.current.y : null}\n        left={clickPosition.current ? clickPosition.current.x : null}\n        display={showMenu === true ? \"flex\" : \"none\"}\n        onClickHandler={onDoubleClickHandler}\n      />\n    </IconContainer>\n  );\n};\n\nexport default IconMain;\n"]},"metadata":{},"sourceType":"module"}