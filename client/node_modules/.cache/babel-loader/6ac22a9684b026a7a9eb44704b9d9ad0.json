{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/src/components/BottomBar/StartMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { StartMenuButton, StartMenuContainer } from \"./styles/styled\";\nimport ThemeContext from \"../../context/theme/themeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartMenu = _ref => {\n  _s();\n\n  let {\n    themeState\n  } = _ref;\n  const {\n    themeChangeMap\n  } = useContext(ThemeContext);\n  const [isDark, setIsDark] = useState(false);\n  const [toggleRightClick, setToggleRightClick] = useState(false);\n\n  const selectAndChangeRandomColor = () => {\n    // console.log(\"CLicked change theme button\");\n    // const themeArray = Object.entries(themeChangeMap);\n    // const randomNumber = Math.floor(Math.random() * themeArray.length);\n    // themeArray[randomNumber][1]();\n    //! Dark theme is not great nor the back groind colors.\n    themeChangeMap.pink();\n  };\n\n  const toggleDarkMode = () => {\n    isDark ? themeChangeMap.dark() : themeChangeMap.light();\n    setIsDark(!isDark);\n  };\n\n  const preventDef = e => {\n    e.preventDefault();\n  };\n\n  const rightClickToggle = () => {\n    if (toggleRightClick) {\n      document.removeEventListener(\"contextmenu\", preventDef);\n      setToggleRightClick(false);\n    }\n\n    if (!toggleRightClick) {\n      document.addEventListener(\"contextmenu\", preventDef);\n      setToggleRightClick(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StartMenuContainer, {\n    themeState: themeState,\n    children: [/*#__PURE__*/_jsxDEV(StartMenuButton, {\n      onClick: selectAndChangeRandomColor,\n      themeState: themeState,\n      children: \"change color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartMenuButton, {\n      onClick: toggleDarkMode,\n      themeState: themeState,\n      children: \"toggle dark mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartMenuButton, {\n      onClick: () => rightClickToggle,\n      themeState: themeState,\n      children: toggleRightClick ? \"disabled right click\" : \"enable right click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartMenu, \"VANLwYAuSup5mdiQ6Yddu/2EN3A=\");\n\n_c = StartMenu;\nexport default StartMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartMenu\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/components/BottomBar/StartMenu.tsx"],"names":["useContext","useState","StartMenuButton","StartMenuContainer","ThemeContext","StartMenu","themeState","themeChangeMap","isDark","setIsDark","toggleRightClick","setToggleRightClick","selectAndChangeRandomColor","pink","toggleDarkMode","dark","light","preventDef","e","preventDefault","rightClickToggle","document","removeEventListener","addEventListener"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,QAAxC,QAAmE,OAAnE;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,iBAApD;AAGA,OAAOC,YAAP,MAAyB,kCAAzB;;;AAEA,MAAMC,SAA6C,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACxE,QAAM;AAAEC,IAAAA;AAAF,MAAqBP,UAAU,CAACI,YAAD,CAArC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAU,KAAV,CAApC;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAU,KAAV,CAAxD;;AAEA,QAAMW,0BAA0B,GAAG,MAAM;AACvC;AACA;AACA;AAEA;AAEA;AACAL,IAAAA,cAAc,CAACM,IAAf;AACD,GATD;;AAWA,QAAMC,cAAc,GAAG,MAAM;AAC3BN,IAAAA,MAAM,GAAGD,cAAc,CAACQ,IAAf,EAAH,GAA2BR,cAAc,CAACS,KAAf,EAAjC;AACAP,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAHD;;AAKA,QAAMS,UAAU,GAAIC,CAAD,IAAc;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAIV,gBAAJ,EAAsB;AACpBW,MAAAA,QAAQ,CAACC,mBAAT,CAA6B,aAA7B,EAA4CL,UAA5C;AACAN,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;;AAED,QAAI,CAACD,gBAAL,EAAuB;AACrBW,MAAAA,QAAQ,CAACE,gBAAT,CAA0B,aAA1B,EAAyCN,UAAzC;AACAN,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,GAVD;;AAYA,sBACE,QAAC,kBAAD;AAAoB,IAAA,UAAU,EAAEL,UAAhC;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEM,0BAA1B;AAAsD,MAAA,UAAU,EAAEN,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEQ,cAA1B;AAA0C,MAAA,UAAU,EAAER,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,MAAMc,gBAAhC;AAAkD,MAAA,UAAU,EAAEd,UAA9D;AAAA,gBACGI,gBAAgB,GAAG,sBAAH,GAA4B;AAD/C;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlDD;;GAAML,S;;KAAAA,S;AAoDN,eAAeA,SAAf","sourcesContent":["import { FunctionComponent, useContext, useState, useEffect } from \"react\";\nimport { StartMenuButton, StartMenuContainer } from \"./styles/styled\";\nimport { IStartMenuProps } from \"./types/interfaces\";\n\nimport ThemeContext from \"../../context/theme/themeContext\";\n\nconst StartMenu: FunctionComponent<IStartMenuProps> = ({ themeState }) => {\n  const { themeChangeMap } = useContext(ThemeContext);\n  const [isDark, setIsDark] = useState<boolean>(false);\n  const [toggleRightClick, setToggleRightClick] = useState<boolean>(false);\n\n  const selectAndChangeRandomColor = () => {\n    // console.log(\"CLicked change theme button\");\n    // const themeArray = Object.entries(themeChangeMap);\n    // const randomNumber = Math.floor(Math.random() * themeArray.length);\n\n    // themeArray[randomNumber][1]();\n\n    //! Dark theme is not great nor the back groind colors.\n    themeChangeMap.pink();\n  };\n\n  const toggleDarkMode = () => {\n    isDark ? themeChangeMap.dark() : themeChangeMap.light();\n    setIsDark(!isDark);\n  };\n\n  const preventDef = (e: Event) => {\n    e.preventDefault();\n  };\n\n  const rightClickToggle = () => {\n    if (toggleRightClick) {\n      document.removeEventListener(\"contextmenu\", preventDef);\n      setToggleRightClick(false);\n    }\n\n    if (!toggleRightClick) {\n      document.addEventListener(\"contextmenu\", preventDef);\n      setToggleRightClick(true);\n    }\n  };\n\n  return (\n    <StartMenuContainer themeState={themeState}>\n      <StartMenuButton onClick={selectAndChangeRandomColor} themeState={themeState}>\n        change color\n      </StartMenuButton>\n      <StartMenuButton onClick={toggleDarkMode} themeState={themeState}>\n        toggle dark mode\n      </StartMenuButton>\n      <StartMenuButton onClick={() => rightClickToggle} themeState={themeState}>\n        {toggleRightClick ? \"disabled right click\" : \"enable right click\"}\n      </StartMenuButton>\n    </StartMenuContainer>\n  );\n};\n\nexport default StartMenu;\n"]},"metadata":{},"sourceType":"module"}