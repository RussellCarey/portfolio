{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/client/src/components/Pages/Blog/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport ThemeContext from \"../../../context/theme/themeContext\";\nimport { PageContainer, BlogPostsContainer } from \"./styles/styled\";\nimport BlogPost from \"./BlogPost\";\nimport { fetchBlogPosts } from \"./services/fetchServices\";\nimport Loading from \"../Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogPage = () => {\n  _s();\n\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const [blogPosts, setBlogPosts] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchLast30BlogPosts = async () => {\n    const posts = await fetchBlogPosts();\n    console.log(posts);\n    setBlogPosts(posts);\n    setIsLoading(false);\n  };\n\n  const goToBlogPage = data => {\n    return window.open(`${data.url}`, \"_blank\");\n  };\n\n  useEffect(() => {\n    fetchLast30BlogPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    children: /*#__PURE__*/_jsxDEV(BlogPostsContainer, {\n      themeState: theme,\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }, this) : null, blogPosts ? blogPosts.map(post => {\n        return /*#__PURE__*/_jsxDEV(BlogPost, {\n          data: post,\n          onClick: () => goToBlogPage(post)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }, this);\n      }) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogPage, \"WR5I8tazccH9AztDXgvupVKkcZM=\");\n\n_c = BlogPage;\nexport default BlogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/Pages/Blog/Index.tsx"],"names":["useContext","useEffect","useState","ThemeContext","PageContainer","BlogPostsContainer","BlogPost","fetchBlogPosts","Loading","BlogPage","theme","blogPosts","setBlogPosts","isLoading","setIsLoading","fetchLast30BlogPosts","posts","console","log","goToBlogPage","data","window","open","url","map","post"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,iBAAlD;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAGA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYV,UAAU,CAACG,YAAD,CAA5B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAU,IAAV,CAA1C;;AAEA,QAAMa,oBAAoB,GAAG,YAAY;AACvC,UAAMC,KAAK,GAAG,MAAMT,cAAc,EAAlC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAJ,IAAAA,YAAY,CAACI,KAAD,CAAZ;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GALD;;AAOA,QAAMK,YAAY,GAAIC,IAAD,IAAe;AAClC,WAAOC,MAAM,CAACC,IAAP,CAAa,GAAEF,IAAI,CAACG,GAAI,EAAxB,EAA2B,QAA3B,CAAP;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,kBAAD;AAAoB,MAAA,UAAU,EAAEL,KAAhC;AAAA,iBACGG,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAH,GAAiB,IAD7B,EAEGF,SAAS,GACNA,SAAS,CAACa,GAAV,CAAeC,IAAD,IAAU;AACtB,4BAAO,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA,IAAhB;AAAsB,UAAA,OAAO,EAAE,MAAMN,YAAY,CAACM,IAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,CADM,GAIN,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCD;;GAAMhB,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport ThemeContext from \"../../../context/theme/themeContext\";\nimport { PageContainer, BlogPostsContainer } from \"./styles/styled\";\n\nimport BlogPost from \"./BlogPost\";\nimport BlogSidebar from \"./BlogSideBar\";\n\nimport { fetchBlogPosts } from \"./services/fetchServices\";\nimport Loading from \"../Loading\";\n\nconst BlogPage = () => {\n  const { theme } = useContext(ThemeContext);\n  const [blogPosts, setBlogPosts] = useState<Array<any>>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const fetchLast30BlogPosts = async () => {\n    const posts = await fetchBlogPosts();\n    console.log(posts);\n    setBlogPosts(posts);\n    setIsLoading(false);\n  };\n\n  const goToBlogPage = (data: any) => {\n    return window.open(`${data.url}`, \"_blank\");\n  };\n\n  useEffect(() => {\n    fetchLast30BlogPosts();\n  }, []);\n\n  return (\n    <PageContainer>\n      <BlogPostsContainer themeState={theme}>\n        {isLoading ? <Loading /> : null}\n        {blogPosts\n          ? blogPosts.map((post) => {\n              return <BlogPost data={post} onClick={() => goToBlogPage(post)} />;\n            })\n          : null}\n      </BlogPostsContainer>\n    </PageContainer>\n  );\n};\n\nexport default BlogPage;\n"]},"metadata":{},"sourceType":"module"}