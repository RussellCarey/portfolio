{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/client/src/components/Canvas/CanvasControls.tsx\";\nimport React from \"react\";\nimport { ControlContainer } from \"./styled/styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CanvasControls() {\n  // // If the user has been drawing for over 6 seconds then upload their contribution to the db on each stroke ?\n  // if (time > 6000 && gotInitial) {\n  //   const drawingPaths = await canvasRef.current.exportPaths();\n  //   const drawingString = await JSON.stringify(drawingPaths);\n  //   await uploadDrawing(drawingString);\n  // }\n  return /*#__PURE__*/_jsxDEV(ControlContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"ERASE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"SAVE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = CanvasControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"CanvasControls\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/Canvas/CanvasControls.tsx"],"names":["React","ControlContainer","CanvasControls"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,sBACE,QAAC,gBAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KAbuBA,c","sourcesContent":["import React from \"react\";\nimport { ControlContainer } from \"./styled/styled\";\n\nexport default function CanvasControls() {\n  // // If the user has been drawing for over 6 seconds then upload their contribution to the db on each stroke ?\n  // if (time > 6000 && gotInitial) {\n  //   const drawingPaths = await canvasRef.current.exportPaths();\n  //   const drawingString = await JSON.stringify(drawingPaths);\n  //   await uploadDrawing(drawingString);\n  // }\n  return (\n    <ControlContainer>\n      <button>ERASE</button>\n      <button>SAVE</button>\n    </ControlContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}