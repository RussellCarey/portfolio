{"ast":null,"code":"import _slicedToArray from\"/Users/r/Desktop/portfolio-final/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useContext}from\"react\";import{IconContainer,IconText}from\"./styles/styled\";import WindowContext from\"../../context/window/windowContext\";import IconSquare from\"./IconSquare\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var IconMain=function IconMain(_ref){var pageName=_ref.pageName,text=_ref.text,data=_ref.data,windowType=_ref.windowType,themeState=_ref.themeState,isWeb=_ref.isWeb,aniDelay=_ref.aniDelay,selectedIcon=_ref.selectedIcon,setSelectedIcon=_ref.setSelectedIcon,isProject=_ref.isProject;var windowContext=useContext(WindowContext);var createNewWindow=windowContext.createNewWindow;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSelected=_useState2[0],setIsSelected=_useState2[1];useEffect(function(){if(selectedIcon===pageName)setIsSelected(true);if(selectedIcon!==pageName)setIsSelected(false);},[selectedIcon,pageName]);// ON one click - change the color of the text background\nvar onClickHandler=function onClickHandler(e){if(e.button===0){setSelectedIcon(pageName);}};// When double clicking on the icon\nvar onDoubleClickHandler=function onDoubleClickHandler(){if(isWeb)return window.open(isWeb,\"_blank\");//pageName: string,// id: number,// windowType: string, // data: any,// isProject: boolean\ncreateNewWindow(pageName,windowType,data,false);};return/*#__PURE__*/_jsxs(IconContainer,{onMouseDown:onClickHandler,onDoubleClick:onDoubleClickHandler,initial:{opacity:0,y:-20},transition:{delay:aniDelay,duration:0.5},animate:{opacity:1,y:0},children:[/*#__PURE__*/_jsx(IconSquare,{themeState:themeState,label:pageName,name:text,isProject:isProject}),/*#__PURE__*/_jsx(IconText,{themeState:themeState,isSelected:isSelected,children:text})]});};export default IconMain;","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/Icons/Index.tsx"],"names":["React","useState","useEffect","useContext","IconContainer","IconText","WindowContext","IconSquare","IconMain","pageName","text","data","windowType","themeState","isWeb","aniDelay","selectedIcon","setSelectedIcon","isProject","windowContext","createNewWindow","isSelected","setIsSelected","onClickHandler","e","button","onDoubleClickHandler","window","open","opacity","y","delay","duration"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAAkCC,SAAlC,CAAgEC,UAAhE,KAAkF,OAAlF,CACA,OAASC,aAAT,CAAwBC,QAAxB,KAAwC,iBAAxC,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,CAEA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,C,wFAGA,GAAMC,CAAAA,QAAuC,CAAG,QAA1CA,CAAAA,QAA0C,MAW1C,IAVJC,CAAAA,QAUI,MAVJA,QAUI,CATJC,IASI,MATJA,IASI,CARJC,IAQI,MARJA,IAQI,CAPJC,UAOI,MAPJA,UAOI,CANJC,UAMI,MANJA,UAMI,CALJC,KAKI,MALJA,KAKI,CAJJC,QAII,MAJJA,QAII,CAHJC,YAGI,MAHJA,YAGI,CAFJC,eAEI,MAFJA,eAEI,CADJC,SACI,MADJA,SACI,CACJ,GAAMC,CAAAA,aAAa,CAAGhB,UAAU,CAACG,aAAD,CAAhC,CACA,GAAQc,CAAAA,eAAR,CAA4BD,aAA5B,CAAQC,eAAR,CACA,cAAoCnB,QAAQ,CAAU,KAAV,CAA5C,wCAAOoB,UAAP,eAAmBC,aAAnB,eAEApB,SAAS,CAAC,UAAM,CACd,GAAIc,YAAY,GAAKP,QAArB,CAA+Ba,aAAa,CAAC,IAAD,CAAb,CAC/B,GAAIN,YAAY,GAAKP,QAArB,CAA+Ba,aAAa,CAAC,KAAD,CAAb,CAChC,CAHQ,CAGN,CAACN,YAAD,CAAeP,QAAf,CAHM,CAAT,CAKA;AACA,GAAMc,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAyB,CAC9C,GAAIA,CAAC,CAACC,MAAF,GAAa,CAAjB,CAAoB,CAClBR,eAAe,CAACR,QAAD,CAAf,CACD,CACF,CAJD,CAMA;AACA,GAAMiB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAIZ,KAAJ,CAAW,MAAOa,CAAAA,MAAM,CAACC,IAAP,CAAYd,KAAZ,CAAmB,QAAnB,CAAP,CAEX;AACAM,eAAe,CAACX,QAAD,CAAWG,UAAX,CAAuBD,IAAvB,CAA6B,KAA7B,CAAf,CACD,CALD,CAOA,mBACE,MAAC,aAAD,EACE,WAAW,CAAEY,cADf,CAEE,aAAa,CAAEG,oBAFjB,CAGE,OAAO,CAAE,CAAEG,OAAO,CAAE,CAAX,CAAcC,CAAC,CAAE,CAAC,EAAlB,CAHX,CAIE,UAAU,CAAE,CAAEC,KAAK,CAAEhB,QAAT,CAAmBiB,QAAQ,CAAE,GAA7B,CAJd,CAKE,OAAO,CAAE,CAAEH,OAAO,CAAE,CAAX,CAAcC,CAAC,CAAE,CAAjB,CALX,wBAOE,KAAC,UAAD,EAAY,UAAU,CAAEjB,UAAxB,CAAoC,KAAK,CAAEJ,QAA3C,CAAqD,IAAI,CAAEC,IAA3D,CAAiE,SAAS,CAAEQ,SAA5E,EAPF,cASE,KAAC,QAAD,EAAU,UAAU,CAAEL,UAAtB,CAAkC,UAAU,CAAEQ,UAA9C,UACGX,IADH,EATF,GADF,CAeD,CAnDD,CAqDA,cAAeF,CAAAA,QAAf","sourcesContent":["import React, { useState, useRef, useEffect, FunctionComponent, useContext } from \"react\";\nimport { IconContainer, IconText } from \"./styles/styled\";\nimport WindowContext from \"../../context/window/windowContext\";\n\nimport IconSquare from \"./IconSquare\";\nimport { IIconProps } from \"./types/interfaces\";\n\nconst IconMain: FunctionComponent<IIconProps> = ({\n  pageName,\n  text,\n  data,\n  windowType,\n  themeState,\n  isWeb,\n  aniDelay,\n  selectedIcon,\n  setSelectedIcon,\n  isProject,\n}) => {\n  const windowContext = useContext(WindowContext);\n  const { createNewWindow } = windowContext;\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (selectedIcon === pageName) setIsSelected(true);\n    if (selectedIcon !== pageName) setIsSelected(false);\n  }, [selectedIcon, pageName]);\n\n  // ON one click - change the color of the text background\n  const onClickHandler = (e: React.MouseEvent) => {\n    if (e.button === 0) {\n      setSelectedIcon(pageName);\n    }\n  };\n\n  // When double clicking on the icon\n  const onDoubleClickHandler = () => {\n    if (isWeb) return window.open(isWeb, \"_blank\");\n\n    //pageName: string,// id: number,// windowType: string, // data: any,// isProject: boolean\n    createNewWindow(pageName, windowType, data, false);\n  };\n\n  return (\n    <IconContainer\n      onMouseDown={onClickHandler}\n      onDoubleClick={onDoubleClickHandler}\n      initial={{ opacity: 0, y: -20 }}\n      transition={{ delay: aniDelay, duration: 0.5 }}\n      animate={{ opacity: 1, y: 0 }}\n    >\n      <IconSquare themeState={themeState} label={pageName} name={text} isProject={isProject} />\n\n      <IconText themeState={themeState} isSelected={isSelected}>\n        {text}\n      </IconText>\n    </IconContainer>\n  );\n};\n\nexport default IconMain;\n"]},"metadata":{},"sourceType":"module"}