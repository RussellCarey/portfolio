{"ast":null,"code":"import * as prismic from \"@prismicio/client\";\n// const repoName = \"projects\";\n// const endpoint = prismic.getEndpoint(repoName);\n// const client = prismic.createClient(endpoint, { fetch });\n// export const getProjects = async () => {\n//   const prismicDoc = await client.getAllByType(\"Projects\");\n//   return prismicDoc;\n// };\nconst endpoint = prismic.getEndpoint(\"mooblyportfolio\");\nconst accessToken = process.env.PRISMIC_; // Set an access token\n\nconst client = prismic.createClient(endpoint, {\n  accessToken\n});\nexport const getAllProjects = async () => {\n  const prismicDoc = await client.getAllByType(\"Projects\");\n  return prismicDoc;\n};","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/utils/prismic.ts"],"names":["prismic","endpoint","getEndpoint","accessToken","process","env","PRISMIC_","client","createClient","getAllProjects","prismicDoc","getAllByType"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,mBAAzB;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAACE,WAAR,CAAoB,iBAApB,CAAjB;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAhC,C,CAA0C;;AAE1C,MAAMC,MAAM,GAAGP,OAAO,CAACQ,YAAR,CAAqBP,QAArB,EAA+B;AAAEE,EAAAA;AAAF,CAA/B,CAAf;AAEA,OAAO,MAAMM,cAAc,GAAG,YAAY;AACxC,QAAMC,UAAU,GAAG,MAAMH,MAAM,CAACI,YAAP,CAAoB,UAApB,CAAzB;AACA,SAAOD,UAAP;AACD,CAHM","sourcesContent":["import * as prismic from \"@prismicio/client\";\nimport * as prismicHelpers from \"@prismicio/helpers\";\nimport fetch from \"node-fetch\";\n\n// const repoName = \"projects\";\n// const endpoint = prismic.getEndpoint(repoName);\n// const client = prismic.createClient(endpoint, { fetch });\n\n// export const getProjects = async () => {\n//   const prismicDoc = await client.getAllByType(\"Projects\");\n//   return prismicDoc;\n// };\n\nconst endpoint = prismic.getEndpoint(\"mooblyportfolio\");\nconst accessToken = process.env.PRISMIC_; // Set an access token\n\nconst client = prismic.createClient(endpoint, { accessToken });\n\nexport const getAllProjects = async () => {\n  const prismicDoc = await client.getAllByType(\"Projects\");\n  return prismicDoc;\n};\n"]},"metadata":{},"sourceType":"module"}