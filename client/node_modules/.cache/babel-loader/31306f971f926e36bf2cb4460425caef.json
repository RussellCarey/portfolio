{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/client/src/components/Canvas/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport ThemeContext from \"../../context/theme/themeContext\";\nimport styled from \"styled-components\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n`;\n_c = Container;\n\nconst onDraw = e => {//\n};\n\nconst Index = _ref => {\n  _s();\n\n  let {\n    canvasRef\n  } = _ref;\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const [canDraw, setCanDraw] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onClick: () => \"Clicked to draw\",\n    children: /*#__PURE__*/_jsxDEV(ReactSketchCanvas, {\n      ref: canvasRef,\n      canvasColor: \"transparent\",\n      width: \"100vw\",\n      height: \"100vh\",\n      strokeWidth: canDraw ? 4 : 0,\n      strokeColor: theme.borderColor,\n      onStroke: e => onDraw(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"CyDnPkc9CXVS+x/XaY0Y2uVmIVQ=\");\n\n_c2 = Index;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/Canvas/Index.tsx"],"names":["useContext","useState","ThemeContext","styled","ReactSketchCanvas","Container","div","onDraw","e","Index","canvasRef","theme","canDraw","setCanDraw","borderColor"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAAqBC,iBAArB,QAA8C,qBAA9C;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,S;;AAYN,MAAME,MAAM,GAAIC,CAAD,IAAmB,CAChC;AACD,CAFD;;AAIA,MAAMC,KAAsC,GAAG,QAAmB;AAAA;;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAAYX,UAAU,CAACE,YAAD,CAA5B;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,OAAO,EAAE,MAAM,iBAA1B;AAAA,2BACE,QAAC,iBAAD;AACE,MAAA,GAAG,EAAES,SADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,MAAM,EAAC,OAJT;AAKE,MAAA,WAAW,EAAEE,OAAO,GAAG,CAAH,GAAO,CAL7B;AAME,MAAA,WAAW,EAAED,KAAK,CAACG,WANrB;AAOE,MAAA,QAAQ,EAAGN,CAAD,IAAOD,MAAM,CAACC,CAAD;AAPzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjBD;;GAAMC,K;;MAAAA,K;AAmBN,eAAeA,KAAf","sourcesContent":["import { FunctionComponent, useContext, useState } from \"react\";\nimport ThemeContext from \"../../context/theme/themeContext\";\nimport styled from \"styled-components\";\n\nimport { CanvasPath, ReactSketchCanvas } from \"react-sketch-canvas\";\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n`;\n\ninterface ICanvasProps {\n  canvasRef: React.MutableRefObject<any>;\n}\n\nconst onDraw = (e: CanvasPath) => {\n  //\n};\n\nconst Index: FunctionComponent<ICanvasProps> = ({ canvasRef }) => {\n  const { theme } = useContext(ThemeContext);\n  const [canDraw, setCanDraw] = useState(false);\n\n  return (\n    <Container onClick={() => \"Clicked to draw\"}>\n      <ReactSketchCanvas\n        ref={canvasRef}\n        canvasColor=\"transparent\"\n        width=\"100vw\"\n        height=\"100vh\"\n        strokeWidth={canDraw ? 4 : 0}\n        strokeColor={theme.borderColor}\n        onStroke={(e) => onDraw(e)}\n      />\n    </Container>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}