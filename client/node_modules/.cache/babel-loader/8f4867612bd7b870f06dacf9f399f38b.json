{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/src/context/theme/themeState.tsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport ThemeReducer from \"./themeReducer\";\nimport ThemeContext from \"./themeContext\";\nimport { SET_DARK_THEME, SET_LIGHT_THEME, SET_BLUE_THEME, SET_PINK_THEME, SET_PURPLE_THEME, SET_TURQUOISE_THEME } from \"./types\";\nimport { lightThemeDefault, darkThemeDefault, KobayashiColors } from \"./colorSchemes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeState = props => {\n  _s();\n\n  const savedTheme = localStorage.getItem(\"theme\") ? JSON.parse(localStorage.getItem(\"theme\")) : null;\n  const defaultState = lightThemeDefault;\n  const [theme, dispatch] = useReducer(ThemeReducer, defaultState);\n\n  const setLightTheme = () => {\n    dispatch({\n      type: SET_LIGHT_THEME,\n      payload: lightThemeDefault\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      ...lightThemeDefault\n    }));\n    return [\"Changed theme to light.\"];\n  };\n\n  const setDarkTheme = () => {\n    dispatch({\n      type: SET_DARK_THEME,\n      payload: darkThemeDefault\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      ...darkThemeDefault\n    }));\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setPinkColor = () => {\n    dispatch({\n      type: SET_PINK_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      backgroundColor: KobayashiColors.pink.background,\n      terminalColor: KobayashiColors.pink.terminal\n    }));\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setPeachColor = () => {\n    dispatch({\n      type: SET_PINK_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      backgroundColor: KobayashiColors.peach.background,\n      terminalColor: KobayashiColors.peach.terminal\n    }));\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setTurquoiseColor = () => {\n    dispatch({\n      type: SET_TURQUOISE_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      backgroundColor: KobayashiColors.turquoise.background,\n      terminalColor: KobayashiColors.turquoise.terminal\n    }));\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setPurpleColor = () => {\n    dispatch({\n      type: SET_PURPLE_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      backgroundColor: KobayashiColors.purple.background,\n      terminalColor: KobayashiColors.purple.terminal\n    }));\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setBlueColor = () => {\n    dispatch({\n      type: SET_BLUE_THEME,\n      payload: KobayashiColors\n    });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme,\n      backgroundColor: KobayashiColors.blue.background,\n      terminalColor: KobayashiColors.blue.terminal\n    }));\n    return [\"Changed theme to dark.\"];\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeState, \"Hc6P2Un5PkKIP7V9/nTL2tP0MLE=\");\n\n_c = ThemeState;\nexport default ThemeState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeState\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/context/theme/themeState.tsx"],"names":["useReducer","ThemeReducer","ThemeContext","SET_DARK_THEME","SET_LIGHT_THEME","SET_BLUE_THEME","SET_PINK_THEME","SET_PURPLE_THEME","SET_TURQUOISE_THEME","lightThemeDefault","darkThemeDefault","KobayashiColors","ThemeState","props","savedTheme","localStorage","getItem","JSON","parse","defaultState","theme","dispatch","setLightTheme","type","payload","setItem","stringify","setDarkTheme","setPinkColor","backgroundColor","pink","background","terminalColor","terminal","setPeachColor","peach","setTurquoiseColor","turquoise","setPurpleColor","purple","setBlueColor","blue","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\nimport ThemeReducer from \"./themeReducer\";\nimport ThemeContext from \"./themeContext\";\nimport {\n  SET_DARK_THEME,\n  SET_LIGHT_THEME,\n  SET_BLUE_THEME,\n  SET_PEACH_THEME,\n  SET_PINK_THEME,\n  SET_PURPLE_THEME,\n  SET_TURQUOISE_THEME,\n  IPropsState,\n} from \"./types\";\nimport { lightThemeDefault, darkThemeDefault, KobayashiColors } from \"./colorSchemes\";\n\nconst ThemeState = (props: IPropsState) => {\n  const savedTheme = localStorage.getItem(\"theme\") ? JSON.parse(localStorage.getItem(\"theme\")!) : null;\n  const defaultState = lightThemeDefault;\n\n  const [theme, dispatch] = useReducer(ThemeReducer, defaultState);\n\n  const setLightTheme = () => {\n    dispatch({ type: SET_LIGHT_THEME, payload: lightThemeDefault });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme, ...lightThemeDefault }));\n    return [\"Changed theme to light.\"];\n  };\n\n  const setDarkTheme = () => {\n    dispatch({ type: SET_DARK_THEME, payload: darkThemeDefault });\n    localStorage.setItem(\"theme\", JSON.stringify({ ...theme, ...darkThemeDefault }));\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setPinkColor = () => {\n    dispatch({ type: SET_PINK_THEME, payload: KobayashiColors });\n    localStorage.setItem(\n      \"theme\",\n      JSON.stringify({\n        ...theme,\n        backgroundColor: KobayashiColors.pink.background,\n        terminalColor: KobayashiColors.pink.terminal,\n      })\n    );\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setPeachColor = () => {\n    dispatch({ type: SET_PINK_THEME, payload: KobayashiColors });\n    localStorage.setItem(\n      \"theme\",\n      JSON.stringify({\n        ...theme,\n        backgroundColor: KobayashiColors.peach.background,\n        terminalColor: KobayashiColors.peach.terminal,\n      })\n    );\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setTurquoiseColor = () => {\n    dispatch({ type: SET_TURQUOISE_THEME, payload: KobayashiColors });\n    localStorage.setItem(\n      \"theme\",\n      JSON.stringify({\n        ...theme,\n        backgroundColor: KobayashiColors.turquoise.background,\n        terminalColor: KobayashiColors.turquoise.terminal,\n      })\n    );\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setPurpleColor = () => {\n    dispatch({ type: SET_PURPLE_THEME, payload: KobayashiColors });\n    localStorage.setItem(\n      \"theme\",\n      JSON.stringify({\n        ...theme,\n        backgroundColor: KobayashiColors.purple.background,\n        terminalColor: KobayashiColors.purple.terminal,\n      })\n    );\n    return [\"Changed theme to dark.\"];\n  };\n\n  const setBlueColor = () => {\n    dispatch({ type: SET_BLUE_THEME, payload: KobayashiColors });\n    localStorage.setItem(\n      \"theme\",\n      JSON.stringify({\n        ...theme,\n        backgroundColor: KobayashiColors.blue.background,\n        terminalColor: KobayashiColors.blue.terminal,\n      })\n    );\n    return [\"Changed theme to dark.\"];\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n      }}\n    >\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeState;\n"]},"metadata":{},"sourceType":"module"}