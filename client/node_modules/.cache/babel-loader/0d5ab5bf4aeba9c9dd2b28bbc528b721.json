{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/client/src/components/InnerPages/Blog/Index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport ThemeContext from \"../../../context/theme/themeContext\";\nimport { PageContainer } from \"./styles/styled\";\nimport BlogPost from \"./BlogPost\";\nimport { fetchBlogPosts } from \"./services/fetchServices\";\nimport Loading from \"../../Spinners/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogPage = _ref => {\n  _s();\n\n  let {\n    dimensions\n  } = _ref;\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const [blogPosts, setBlogPosts] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchLast30BlogPosts = async () => {\n    const posts = await fetchBlogPosts();\n    setBlogPosts(posts);\n    setIsLoading(false);\n  };\n\n  const goToBlogPage = data => {\n    return window.open(`${data.url}`, \"_blank\");\n  };\n\n  useEffect(() => {\n    fetchLast30BlogPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageContainer, {\n    dimensions: dimensions,\n    themeState: theme,\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 20\n    }, this) : null, blogPosts ? blogPosts.map(post => {\n      return /*#__PURE__*/_jsxDEV(BlogPost, {\n        data: post,\n        onClick: () => goToBlogPage(post)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogPage, \"WR5I8tazccH9AztDXgvupVKkcZM=\");\n\n_c = BlogPage;\nexport default BlogPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/InnerPages/Blog/Index.tsx"],"names":["useContext","useEffect","useState","ThemeContext","PageContainer","BlogPost","fetchBlogPosts","Loading","BlogPage","dimensions","theme","blogPosts","setBlogPosts","isLoading","setIsLoading","fetchLast30BlogPosts","posts","goToBlogPage","data","window","open","url","map","post"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,SAAxC,EAAmDC,QAAnD,QAAmE,OAAnE;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAMA,MAAMC,QAA2C,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAYV,UAAU,CAACG,YAAD,CAA5B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAU,IAAV,CAA1C;;AAEA,QAAMa,oBAAoB,GAAG,YAAY;AACvC,UAAMC,KAAK,GAAG,MAAMV,cAAc,EAAlC;AACAM,IAAAA,YAAY,CAACI,KAAD,CAAZ;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAIC,IAAD,IAAe;AAClC,WAAOC,MAAM,CAACC,IAAP,CAAa,GAAEF,IAAI,CAACG,GAAI,EAAxB,EAA2B,QAA3B,CAAP;AACD,GAFD;;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,UAAU,EAAEN,UAA3B;AAAuC,IAAA,UAAU,EAAEC,KAAnD;AAAA,eACGG,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiB,IAD7B,EAEGF,SAAS,GACNA,SAAS,CAACW,GAAV,CAAeC,IAAD,IAAU;AACtB,0BAAO,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA,IAAhB;AAAsB,QAAA,OAAO,EAAE,MAAMN,YAAY,CAACM,IAAD;AAAjD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,CADM,GAIN,IANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7BD;;GAAMf,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import { FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport ThemeContext from \"../../../context/theme/themeContext\";\nimport { PageContainer } from \"./styles/styled\";\n\nimport BlogPost from \"./BlogPost\";\n\nimport { fetchBlogPosts } from \"./services/fetchServices\";\nimport Loading from \"../../Spinners/Spinner\";\n\ninterface IBlogPageProps {\n  dimensions: { width: number; height: number };\n}\n\nconst BlogPage: FunctionComponent<IBlogPageProps> = ({ dimensions }) => {\n  const { theme } = useContext(ThemeContext);\n  const [blogPosts, setBlogPosts] = useState<Array<any>>();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  const fetchLast30BlogPosts = async () => {\n    const posts = await fetchBlogPosts();\n    setBlogPosts(posts);\n    setIsLoading(false);\n  };\n\n  const goToBlogPage = (data: any) => {\n    return window.open(`${data.url}`, \"_blank\");\n  };\n\n  useEffect(() => {\n    fetchLast30BlogPosts();\n  }, []);\n\n  return (\n    <PageContainer dimensions={dimensions} themeState={theme}>\n      {isLoading ? <Loading /> : null}\n      {blogPosts\n        ? blogPosts.map((post) => {\n            return <BlogPost data={post} onClick={() => goToBlogPage(post)} />;\n          })\n        : null}\n    </PageContainer>\n  );\n};\n\nexport default BlogPage;\n"]},"metadata":{},"sourceType":"module"}