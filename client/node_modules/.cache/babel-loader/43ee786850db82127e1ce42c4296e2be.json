{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/src/components/Pages/Project/Youtube.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoContainer = styled.div`\n  width: 100%;\n  height: 100%;\n\n  border: solid 5px ${props => props.themeState.borderColor};\n  border-radius: 15px;\n\n  filter: grayscale(100%);\n`;\n_c = VideoContainer;\nconst IFrameContainer = styled.iframe`\n  width: 100%;\n  height: 100%;\n`;\n_c2 = IFrameContainer;\n\nconst YoutubeEmbed = _ref => {\n  _s();\n\n  let {\n    id,\n    themeState\n  } = _ref;\n  const [clicked, setClicked] = useState();\n  return /*#__PURE__*/_jsxDEV(VideoContainer, {\n    themeState: themeState,\n    children: /*#__PURE__*/_jsxDEV(IFrameContainer, {\n      src: `https://www.youtube.com/embed/${id}`,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      title: \"Embedded youtube\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(YoutubeEmbed, \"6kx7k+LF45tDa6D2KycIC5KEBI4=\");\n\n_c3 = YoutubeEmbed;\nYoutubeEmbed.propTypes = {\n  id: PropTypes.string.isRequired\n};\nexport default YoutubeEmbed;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"VideoContainer\");\n$RefreshReg$(_c2, \"IFrameContainer\");\n$RefreshReg$(_c3, \"YoutubeEmbed\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/components/Pages/Project/Youtube.tsx"],"names":["React","useState","styled","PropTypes","VideoContainer","div","props","themeState","borderColor","IFrameContainer","iframe","YoutubeEmbed","id","clicked","setClicked","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAQA,MAAMC,cAAc,GAAGF,MAAM,CAACG,GAAI;AAClC;AACA;AACA;AACA,sBAAuBC,KAAD,IAAyBA,KAAK,CAACC,UAAN,CAAiBC,WAAY;AAC5E;AACA;AACA;AACA,CARA;KAAMJ,c;AAUN,MAAMK,eAAe,GAAGP,MAAM,CAACQ,MAAO;AACtC;AACA;AACA,CAHA;MAAMD,e;;AAKN,MAAME,YAA8C,GAAG,QAAwB;AAAA;;AAAA,MAAvB;AAAEC,IAAAA,EAAF;AAAML,IAAAA;AAAN,GAAuB;AAC7E,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;AAEA,sBACE,QAAC,cAAD;AAAgB,IAAA,UAAU,EAAEM,UAA5B;AAAA,2BACE,QAAC,eAAD;AACE,MAAA,GAAG,EAAG,iCAAgCK,EAAG,EAD3C;AAEE,MAAA,WAAW,EAAC,GAFd;AAGE,MAAA,KAAK,EAAC,0FAHR;AAIE,MAAA,eAAe,MAJjB;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdD;;GAAMD,Y;;MAAAA,Y;AAgBNA,YAAY,CAACI,SAAb,GAAyB;AACvBH,EAAAA,EAAE,EAAET,SAAS,CAACa,MAAV,CAAiBC;AADE,CAAzB;AAIA,eAAeN,YAAf","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { IStyledProps, IThemeStateProps } from \"../../../interfaces/types\";\n\ninterface IYoutubeEmbed {\n  id: string;\n  themeState: IThemeStateProps;\n}\n\nconst VideoContainer = styled.div`\n  width: 100%;\n  height: 100%;\n\n  border: solid 5px ${(props: IStyledProps) => props.themeState.borderColor};\n  border-radius: 15px;\n\n  filter: grayscale(100%);\n`;\n\nconst IFrameContainer = styled.iframe`\n  width: 100%;\n  height: 100%;\n`;\n\nconst YoutubeEmbed: FunctionComponent<IYoutubeEmbed> = ({ id, themeState }) => {\n  const [clicked, setClicked] = useState<boolean>();\n\n  return (\n    <VideoContainer themeState={themeState}>\n      <IFrameContainer\n        src={`https://www.youtube.com/embed/${id}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        title=\"Embedded youtube\"\n      />\n    </VideoContainer>\n  );\n};\n\nYoutubeEmbed.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n\nexport default YoutubeEmbed;\n"]},"metadata":{},"sourceType":"module"}