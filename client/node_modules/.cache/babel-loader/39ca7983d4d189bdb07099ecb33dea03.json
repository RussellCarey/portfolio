{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/src/components/BottomBar/StartMenu.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { StartMenuButton, StartMenuContainer } from \"./styles/styled\";\nimport ThemeContext from \"../../context/theme/themeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartMenu = _ref => {\n  _s();\n\n  let {\n    themeState,\n    setToggleRightClick,\n    toggleRightClick\n  } = _ref;\n  const {\n    themeChangeMap\n  } = useContext(ThemeContext);\n  const [isDark, setIsDark] = useState(false);\n\n  const selectAndChangeRandomColor = () => {\n    // console.log(\"CLicked change theme button\");\n    // const themeArray = Object.entries(themeChangeMap);\n    // const randomNumber = Math.floor(Math.random() * themeArray.length);\n    // themeArray[randomNumber][1]();\n    //! Dark theme is not great nor the back groind colors.\n    themeChangeMap.pink();\n  };\n\n  const toggleDarkMode = () => {\n    isDark ? themeChangeMap.dark() : themeChangeMap.light();\n    setIsDark(!isDark);\n  };\n\n  const rightClickToggle = () => {\n    if (toggleRightClick) {\n      document.addEventListener(\"contextmenu\", e => e.preventDefault());\n      setToggleRightClick(false);\n    }\n\n    if (!toggleRightClick) {\n      document.removeEventListener(\"contextmenu\", e => e.preventDefault(), false);\n      setToggleRightClick(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StartMenuContainer, {\n    themeState: themeState,\n    children: [/*#__PURE__*/_jsxDEV(StartMenuButton, {\n      onClick: selectAndChangeRandomColor,\n      themeState: themeState,\n      children: \"change color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartMenuButton, {\n      onClick: toggleDarkMode,\n      themeState: themeState,\n      children: \"toggle dark mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StartMenuButton, {\n      onClick: rightClickToggle,\n      themeState: themeState,\n      children: toggleRightClick ? \"disabled right click\" : \"enable right click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartMenu, \"Jq1t6TDOFSpscMPE+DnV/ynbalE=\");\n\n_c = StartMenu;\nexport default StartMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartMenu\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/src/components/BottomBar/StartMenu.tsx"],"names":["useContext","useState","StartMenuButton","StartMenuContainer","ThemeContext","StartMenu","themeState","setToggleRightClick","toggleRightClick","themeChangeMap","isDark","setIsDark","selectAndChangeRandomColor","pink","toggleDarkMode","dark","light","rightClickToggle","document","addEventListener","e","preventDefault","removeEventListener"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,QAAxC,QAAmE,OAAnE;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,iBAApD;AAGA,OAAOC,YAAP,MAAyB,kCAAzB;;;AAEA,MAAMC,SAA6C,GAAG,QAA2D;AAAA;;AAAA,MAA1D;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,mBAAd;AAAmCC,IAAAA;AAAnC,GAA0D;AAC/G,QAAM;AAAEC,IAAAA;AAAF,MAAqBT,UAAU,CAACI,YAAD,CAArC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAU,KAAV,CAApC;;AAEA,QAAMW,0BAA0B,GAAG,MAAM;AACvC;AACA;AACA;AAEA;AAEA;AACAH,IAAAA,cAAc,CAACI,IAAf;AACD,GATD;;AAWA,QAAMC,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,MAAM,GAAGD,cAAc,CAACM,IAAf,EAAH,GAA2BN,cAAc,CAACO,KAAf,EAAjC;AACAL,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAHD;;AAKA,QAAMO,gBAAgB,GAAG,MAAM;AAC7B,QAAIT,gBAAJ,EAAsB;AACpBU,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,EAA0CC,CAAD,IAAOA,CAAC,CAACC,cAAF,EAAhD;AACAd,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD;;AAED,QAAI,CAACC,gBAAL,EAAuB;AACrBU,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,aAA7B,EAA6CF,CAAD,IAAOA,CAAC,CAACC,cAAF,EAAnD,EAAuE,KAAvE;AACAd,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,GAVD;;AAYA,sBACE,QAAC,kBAAD;AAAoB,IAAA,UAAU,EAAED,UAAhC;AAAA,4BACE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEM,0BAA1B;AAAsD,MAAA,UAAU,EAAEN,UAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEQ,cAA1B;AAA0C,MAAA,UAAU,EAAER,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE,QAAC,eAAD;AAAiB,MAAA,OAAO,EAAEW,gBAA1B;AAA4C,MAAA,UAAU,EAAEX,UAAxD;AAAA,gBACGE,gBAAgB,GAAG,sBAAH,GAA4B;AAD/C;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA7CD;;GAAMH,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import { FunctionComponent, useContext, useState, useEffect } from \"react\";\nimport { StartMenuButton, StartMenuContainer } from \"./styles/styled\";\nimport { IStartMenuProps } from \"./types/interfaces\";\n\nimport ThemeContext from \"../../context/theme/themeContext\";\n\nconst StartMenu: FunctionComponent<IStartMenuProps> = ({ themeState, setToggleRightClick, toggleRightClick }) => {\n  const { themeChangeMap } = useContext(ThemeContext);\n  const [isDark, setIsDark] = useState<boolean>(false);\n\n  const selectAndChangeRandomColor = () => {\n    // console.log(\"CLicked change theme button\");\n    // const themeArray = Object.entries(themeChangeMap);\n    // const randomNumber = Math.floor(Math.random() * themeArray.length);\n\n    // themeArray[randomNumber][1]();\n\n    //! Dark theme is not great nor the back groind colors.\n    themeChangeMap.pink();\n  };\n\n  const toggleDarkMode = () => {\n    isDark ? themeChangeMap.dark() : themeChangeMap.light();\n    setIsDark(!isDark);\n  };\n\n  const rightClickToggle = () => {\n    if (toggleRightClick) {\n      document.addEventListener(\"contextmenu\", (e) => e.preventDefault());\n      setToggleRightClick(false);\n    }\n\n    if (!toggleRightClick) {\n      document.removeEventListener(\"contextmenu\", (e) => e.preventDefault(), false);\n      setToggleRightClick(true);\n    }\n  };\n\n  return (\n    <StartMenuContainer themeState={themeState}>\n      <StartMenuButton onClick={selectAndChangeRandomColor} themeState={themeState}>\n        change color\n      </StartMenuButton>\n      <StartMenuButton onClick={toggleDarkMode} themeState={themeState}>\n        toggle dark mode\n      </StartMenuButton>\n      <StartMenuButton onClick={rightClickToggle} themeState={themeState}>\n        {toggleRightClick ? \"disabled right click\" : \"enable right click\"}\n      </StartMenuButton>\n    </StartMenuContainer>\n  );\n};\n\nexport default StartMenu;\n"]},"metadata":{},"sourceType":"module"}