{"ast":null,"code":"import{isMobile}from\"react-device-detect\";// Get current position inside the DIV.\nexport var getMousePositionInDiv=function getMousePositionInDiv(e){// Important: currentTarget for parent but target for div -- This is why the math was off -- wrong div..\nvar rect=e.currentTarget.getBoundingClientRect();var mouseY=e.clientY-rect.top;var mouseX=e.clientX-rect.left;return{mouseX:mouseX,mouseY:mouseY,rect:rect};};export var isInsideResize=function isInsideResize(mousePos){if(mousePos.mouseX<mousePos.rect.width&&mousePos.mouseX>mousePos.rect.width-100&&mousePos.mouseY<mousePos.rect.height&&mousePos.mouseY>mousePos.rect.height-70&&!isMobile){return true;}else{return false;}};export var isInsideTopBar=function isInsideTopBar(mousePos){if(mousePos.mouseY>0&&mousePos.mouseY<100&&mousePos.mouseX>0){return true;}else{return false;}};","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/Window/utils/utilFunctions.ts"],"names":["isMobile","getMousePositionInDiv","e","rect","currentTarget","getBoundingClientRect","mouseY","clientY","top","mouseX","clientX","left","isInsideResize","mousePos","width","height","isInsideTopBar"],"mappings":"AAAA,OAASA,QAAT,KAAyB,qBAAzB,CAEA;AACA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,CAAD,CAAY,CAC/C;AACA,GAAMC,CAAAA,IAAI,CAAGD,CAAC,CAACE,aAAF,CAAgBC,qBAAhB,EAAb,CACA,GAAMC,CAAAA,MAAM,CAAGJ,CAAC,CAACK,OAAF,CAAYJ,IAAI,CAACK,GAAhC,CACA,GAAMC,CAAAA,MAAM,CAAGP,CAAC,CAACQ,OAAF,CAAYP,IAAI,CAACQ,IAAhC,CACA,MAAO,CAAEF,MAAM,CAANA,MAAF,CAAUH,MAAM,CAANA,MAAV,CAAkBH,IAAI,CAAJA,IAAlB,CAAP,CACD,CANM,CAQP,MAAO,IAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,QAAD,CAAmB,CAC/C,GACEA,QAAQ,CAACJ,MAAT,CAAkBI,QAAQ,CAACV,IAAT,CAAcW,KAAhC,EACAD,QAAQ,CAACJ,MAAT,CAAkBI,QAAQ,CAACV,IAAT,CAAcW,KAAd,CAAsB,GADxC,EAEAD,QAAQ,CAACP,MAAT,CAAkBO,QAAQ,CAACV,IAAT,CAAcY,MAFhC,EAGAF,QAAQ,CAACP,MAAT,CAAkBO,QAAQ,CAACV,IAAT,CAAcY,MAAd,CAAuB,EAHzC,EAIA,CAACf,QALH,CAME,CACA,MAAO,KAAP,CACD,CARD,IAQO,CACL,MAAO,MAAP,CACD,CACF,CAZM,CAcP,MAAO,IAAMgB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,QAAD,CAAmB,CAC/C,GAAIA,QAAQ,CAACP,MAAT,CAAkB,CAAlB,EAAuBO,QAAQ,CAACP,MAAT,CAAkB,GAAzC,EAAgDO,QAAQ,CAACJ,MAAT,CAAkB,CAAtE,CAAyE,CACvE,MAAO,KAAP,CACD,CAFD,IAEO,CACL,MAAO,MAAP,CACD,CACF,CANM","sourcesContent":["import { isMobile } from \"react-device-detect\";\n\n// Get current position inside the DIV.\nexport const getMousePositionInDiv = (e: any) => {\n  // Important: currentTarget for parent but target for div -- This is why the math was off -- wrong div..\n  const rect = e.currentTarget.getBoundingClientRect();\n  const mouseY = e.clientY - rect.top;\n  const mouseX = e.clientX - rect.left;\n  return { mouseX, mouseY, rect };\n};\n\nexport const isInsideResize = (mousePos: any) => {\n  if (\n    mousePos.mouseX < mousePos.rect.width &&\n    mousePos.mouseX > mousePos.rect.width - 100 &&\n    mousePos.mouseY < mousePos.rect.height &&\n    mousePos.mouseY > mousePos.rect.height - 70 &&\n    !isMobile\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const isInsideTopBar = (mousePos: any) => {\n  if (mousePos.mouseY > 0 && mousePos.mouseY < 100 && mousePos.mouseX > 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}