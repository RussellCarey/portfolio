{"ast":null,"code":"var _jsxFileName = \"/Users/r/Desktop/portfolio-final/client/src/components/Window/Index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, useContext } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport WindowContext from \"../../context/window/windowContext\"; // Util functions\n\nimport { getMousePositionInDiv, isInsideTopBar, isInsideResize } from \"./utils/utilFunctions\";\nimport { TopBar, MainWindow, CornerButton, WindowContainer } from \"./styles/styled\";\nimport AboutPage from \"../InnerPages/About/Index\";\nimport BlogPage from \"../InnerPages/Blog/Index\";\nimport ProjectPage from \"../InnerPages/Project/Index\";\nimport ProjectsPage from \"../InnerPages/Projects/ProjectsFolder\";\nimport Contact from \"../InnerPages/Contact/Contact\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Window(_ref) {\n  _s();\n\n  let {\n    pageName,\n    themeState,\n    id,\n    windowType,\n    data,\n    windowList\n  } = _ref;\n  console.log(\"Rendered window\");\n  const {\n    deleteActiveWindow\n  } = useContext(WindowContext);\n  const [dimensions, setDimensions] = useState({});\n  const defaultTop = !isMobile ? 10 * windowList.length : 10;\n  const defaultLeft = !isMobile ? 40 * windowList.length : 10;\n  const [position, setPosition] = useState({\n    top: defaultTop,\n    left: defaultLeft\n  });\n  const container = useRef();\n  const isOnResize = useRef(false);\n  const [isResizing, setIsResizing] = useState(false);\n  const isOnMoving = useRef(false);\n  const [isMoving, setIsMoving] = useState(false);\n  const [movingPoint, setMovingPoint] = useState();\n  const [dragStartPoint, setStartDragPoint] = useState();\n  useEffect(() => {\n    // Get window size on startup - this is for resizing\n    setDimensions({\n      width: container.current.clientWidth,\n      height: container.current.clientHeight\n    });\n  }, [container]); // Check if mouse is in the movement zone\n\n  const checkMouseInMove = mousePos => {\n    if (isInsideTopBar(mousePos)) {\n      document.body.style.cursor = \"move\";\n      isOnMoving.current = true;\n    } else {\n      isOnMoving.current = false;\n      document.body.style.cursor = \"initial\";\n    }\n  }; // Check if mouse is in the resize zone.\n\n\n  const checkMouseInResize = mousePos => {\n    if (isInsideResize(mousePos)) {\n      document.body.style.cursor = \"move\";\n      isOnResize.current.current = true;\n    } else {\n      isOnResize.current = false;\n      document.body.style.cursor = \"initial\";\n    }\n  }; // When clicked on and in position to resize\n\n\n  const setDragPointAndStartDrag = (e, mousePos) => {\n    if (isOnResize && !isMobile) {\n      setStartDragPoint({\n        x: e.clientX,\n        y: e.clientY,\n        w: mousePos.rect.width,\n        h: mousePos.rect.height\n      });\n      setIsResizing(true);\n    }\n  }; // When clicked on and in position..\n\n\n  const setStartingPoint = e => {\n    const mousePos = getMousePositionInDiv(e);\n    setDragPointAndStartDrag(e, mousePos);\n\n    if (isOnMoving) {\n      isOnMoving.current = true;\n      setMovingPoint({\n        x: mousePos.mouseX,\n        y: mousePos.mouseY\n      });\n    }\n  }; // Update position when resizing\n\n\n  const resizingProcess = e => {\n    if (isResizing) {\n      setDimensions({\n        width: dragStartPoint.w + (e.clientX - dragStartPoint.x),\n        height: dragStartPoint.h + (e.clientY - dragStartPoint.y)\n      });\n    }\n  }; // Update position whilst moving\n\n\n  const movingProcess = e => {\n    if (isMoving) {\n      setPosition({\n        left: e.clientX - movingPoint.x,\n        top: e.clientY - movingPoint.y\n      });\n    }\n  }; //? Checks the mouse position inside the div\n\n\n  const changeWindowSizeOrPos = e => {\n    const mousePos = getMousePositionInDiv(e);\n    checkMouseInMove(mousePos);\n    checkMouseInResize(mousePos);\n    if (isMoving) movingProcess(e);\n    if (isResizing) resizingProcess(e);\n  }; //? MOUSEUP reset\n\n\n  const onReset = () => {\n    setIsResizing(false);\n    setIsMoving(false);\n    isOnResize.current = false;\n    isOnMoving.current = false;\n    setMovingPoint(null);\n    setStartDragPoint(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(WindowContainer, {\n    onMouseMove: changeWindowSizeOrPos,\n    onMouseDown: setStartingPoint,\n    onMouseUp: onReset,\n    onMouseLeave: onReset,\n    themeState: themeState,\n    dimensions: dimensions,\n    position: position,\n    windowList: windowList,\n    isMobile: isMobile,\n    id: id,\n    ref: container,\n    animate: {\n      scale: [1, 1.01, 1.01, 1.01, 1]\n    },\n    transition: {\n      duration: 0.2,\n      delay: 0.1\n    },\n    children: [/*#__PURE__*/_jsxDEV(CornerButton, {\n      themeState: themeState,\n      onClick: () => deleteActiveWindow(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopBar, {\n      themeState: themeState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainWindow, {\n      themeState: themeState,\n      children: [pageName === \"about\" ? /*#__PURE__*/_jsxDEV(AboutPage, {\n        themeState: themeState,\n        dimensions: dimensions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }, this) : null, pageName === \"blog\" ? /*#__PURE__*/_jsxDEV(BlogPage, {\n        themeState: themeState,\n        dimensions: dimensions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 32\n      }, this) : null, pageName === \"contact\" ? /*#__PURE__*/_jsxDEV(Contact, {\n        themeState: themeState,\n        dimensions: dimensions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 35\n      }, this) : null, pageName === \"project\" ? /*#__PURE__*/_jsxDEV(ProjectPage, {\n        themeState: themeState,\n        data: data,\n        dimensions: dimensions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 35\n      }, this) : null, pageName === \"projects\" ? /*#__PURE__*/_jsxDEV(ProjectsPage, {\n        themeState: themeState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 36\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Window, \"CZsD4I1BTZTC4KEDhEZJGXOMIXk=\");\n\n_c = Window;\n\nvar _c;\n\n$RefreshReg$(_c, \"Window\");","map":{"version":3,"sources":["/Users/r/Desktop/portfolio-final/client/src/components/Window/Index.jsx"],"names":["useState","useEffect","useRef","useContext","isMobile","WindowContext","getMousePositionInDiv","isInsideTopBar","isInsideResize","TopBar","MainWindow","CornerButton","WindowContainer","AboutPage","BlogPage","ProjectPage","ProjectsPage","Contact","Window","pageName","themeState","id","windowType","data","windowList","console","log","deleteActiveWindow","dimensions","setDimensions","defaultTop","length","defaultLeft","position","setPosition","top","left","container","isOnResize","isResizing","setIsResizing","isOnMoving","isMoving","setIsMoving","movingPoint","setMovingPoint","dragStartPoint","setStartDragPoint","width","current","clientWidth","height","clientHeight","checkMouseInMove","mousePos","document","body","style","cursor","checkMouseInResize","setDragPointAndStartDrag","e","x","clientX","y","clientY","w","rect","h","setStartingPoint","mouseX","mouseY","resizingProcess","movingProcess","changeWindowSizeOrPos","onReset","scale","duration","delay"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef, useContext } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport WindowContext from \"../../context/window/windowContext\";\n\n// Util functions\nimport { getMousePositionInDiv, isInsideTopBar, isInsideResize } from \"./utils/utilFunctions\";\n\nimport { TopBar, MainWindow, CornerButton, WindowContainer } from \"./styles/styled\";\n\nimport AboutPage from \"../InnerPages/About/Index\";\nimport BlogPage from \"../InnerPages/Blog/Index\";\nimport ProjectPage from \"../InnerPages/Project/Index\";\nimport ProjectsPage from \"../InnerPages/Projects/ProjectsFolder\";\nimport Contact from \"../InnerPages/Contact/Contact\";\n\nexport default function Window({ pageName, themeState, id, windowType, data, windowList }) {\n  console.log(\"Rendered window\");\n  const { deleteActiveWindow } = useContext(WindowContext);\n\n  const [dimensions, setDimensions] = useState({});\n  const defaultTop = !isMobile ? 10 * windowList.length : 10;\n  const defaultLeft = !isMobile ? 40 * windowList.length : 10;\n  const [position, setPosition] = useState({ top: defaultTop, left: defaultLeft });\n\n  const container = useRef();\n  const isOnResize = useRef(false);\n  const [isResizing, setIsResizing] = useState(false);\n  const isOnMoving = useRef(false);\n  const [isMoving, setIsMoving] = useState(false);\n  const [movingPoint, setMovingPoint] = useState();\n  const [dragStartPoint, setStartDragPoint] = useState();\n\n  useEffect(() => {\n    // Get window size on startup - this is for resizing\n    setDimensions({ width: container.current.clientWidth, height: container.current.clientHeight });\n  }, [container]);\n\n  // Check if mouse is in the movement zone\n  const checkMouseInMove = (mousePos) => {\n    if (isInsideTopBar(mousePos)) {\n      document.body.style.cursor = \"move\";\n      isOnMoving.current = true;\n    } else {\n      isOnMoving.current = false;\n      document.body.style.cursor = \"initial\";\n    }\n  };\n\n  // Check if mouse is in the resize zone.\n  const checkMouseInResize = (mousePos) => {\n    if (isInsideResize(mousePos)) {\n      document.body.style.cursor = \"move\";\n      isOnResize.current.current = true;\n    } else {\n      isOnResize.current = false;\n      document.body.style.cursor = \"initial\";\n    }\n  };\n\n  // When clicked on and in position to resize\n  const setDragPointAndStartDrag = (e, mousePos) => {\n    if (isOnResize && !isMobile) {\n      setStartDragPoint({\n        x: e.clientX,\n        y: e.clientY,\n        w: mousePos.rect.width,\n        h: mousePos.rect.height,\n      });\n\n      setIsResizing(true);\n    }\n  };\n\n  // When clicked on and in position..\n  const setStartingPoint = (e) => {\n    const mousePos = getMousePositionInDiv(e);\n    setDragPointAndStartDrag(e, mousePos);\n\n    if (isOnMoving) {\n      isOnMoving.current = true;\n      setMovingPoint({ x: mousePos.mouseX, y: mousePos.mouseY });\n    }\n  };\n\n  // Update position when resizing\n  const resizingProcess = (e) => {\n    if (isResizing) {\n      setDimensions({\n        width: dragStartPoint.w + (e.clientX - dragStartPoint.x),\n        height: dragStartPoint.h + (e.clientY - dragStartPoint.y),\n      });\n    }\n  };\n\n  // Update position whilst moving\n  const movingProcess = (e) => {\n    if (isMoving) {\n      setPosition({\n        left: e.clientX - movingPoint.x,\n        top: e.clientY - movingPoint.y,\n      });\n    }\n  };\n\n  //? Checks the mouse position inside the div\n  const changeWindowSizeOrPos = (e) => {\n    const mousePos = getMousePositionInDiv(e);\n    checkMouseInMove(mousePos);\n    checkMouseInResize(mousePos);\n\n    if (isMoving) movingProcess(e);\n    if (isResizing) resizingProcess(e);\n  };\n\n  //? MOUSEUP reset\n  const onReset = () => {\n    setIsResizing(false);\n    setIsMoving(false);\n    isOnResize.current = false;\n    isOnMoving.current = false;\n    setMovingPoint(null);\n    setStartDragPoint(null);\n  };\n\n  return (\n    <WindowContainer\n      onMouseMove={changeWindowSizeOrPos}\n      onMouseDown={setStartingPoint}\n      onMouseUp={onReset}\n      onMouseLeave={onReset}\n      themeState={themeState}\n      dimensions={dimensions}\n      position={position}\n      windowList={windowList}\n      isMobile={isMobile}\n      id={id}\n      ref={container}\n      animate={{ scale: [1, 1.01, 1.01, 1.01, 1] }}\n      transition={{ duration: 0.2, delay: 0.1 }}\n    >\n      <CornerButton themeState={themeState} onClick={() => deleteActiveWindow(id)} />\n      <TopBar themeState={themeState} />\n      <MainWindow themeState={themeState}>\n        {pageName === \"about\" ? <AboutPage themeState={themeState} dimensions={dimensions} /> : null}\n        {pageName === \"blog\" ? <BlogPage themeState={themeState} dimensions={dimensions} /> : null}\n        {pageName === \"contact\" ? <Contact themeState={themeState} dimensions={dimensions} /> : null}\n        {pageName === \"project\" ? <ProjectPage themeState={themeState} data={data} dimensions={dimensions} /> : null}\n        {pageName === \"projects\" ? <ProjectsPage themeState={themeState} /> : null}\n      </MainWindow>\n    </WindowContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}